<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.ComponentModel.Composition</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Internal.GenerationServices.LoadValue(System.Reflection.Emit.ILGenerator,System.Object)">
            Generates the code that loads the supplied value on the stack
            This is not as simple as it seems, as different instructions need to be generated depending
            on its type.
            We support:
            1. All primitive types
            2. Strings
            3. Enums
            4. typeofs
            5. nulls
            6. Dictionaries of (string, object) recursively containing all of the above
            7. Enumerables
            8. Delegates on static functions or any of the above
            Everything else cannot be represented as literals
            <param name="ilGenerator"></param>
            <param name="item"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Internal.LazyInit.Init``1(``0@,System.Func{``0})">
            <summary>
            Lazily init an item and return stats as to whether or not you were the winner who
            succeeded in initing that item. Takes a delegate that creates the object to be
            initialized with, that delegate needs to be idempotent.
            
            A common example might be initing some static member f of type Foo:
            
                class Bar
                {
                    static Foo f;
                    public static Foo F
                    {
                        get
                        {
                            LazyInit.Init(ref f, () => new Foo());
                            return f;
                        }
                    }
                }
            </summary>
            <returns>Whether or not this particular call to Init was responsible for Initializing the member</returns>
        </member>
        <member name="T:System.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Strings.AdapterCannotAdaptFromAndToSameContract">
            <summary>
              Looks up a localized string similar to A part in the container exports an adapter method that has metadata indicating that it adapts to and from contract &apos;{0}&apos;. Adapter methods must adapt to and from different contracts..
            </summary>
        </member>
        <member name="P:System.Strings.AdapterContractMismatch">
            <summary>
              Looks up a localized string similar to An adapter in the container indicates that it adapts to contract &apos;{0}&apos;, however, it returned an export with the contract &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.AdapterTypeMismatch">
            <summary>
              Looks up a localized string similar to A part in the container exports an adapter method as type {0}. Adapter methods must be of type {1}..
            </summary>
        </member>
        <member name="P:System.Strings.AdapterTypeNull">
            <summary>
              Looks up a localized string similar to A part in the container in the container exports an adapter method as a null reference (Nothing in Visual Basic). Adapter methods must be of type {1}..
            </summary>
        </member>
        <member name="P:System.Strings.Argument_AssemblyReflectionOnly">
            <summary>
              Looks up a localized string similar to {0} is a reflection-only assembly which is not supported..
            </summary>
        </member>
        <member name="P:System.Strings.Argument_ElementReflectionOnlyType">
            <summary>
              Looks up a localized string similar to {0} contains a reflection-only type which is not supported..
            </summary>
        </member>
        <member name="P:System.Strings.Argument_NullElement">
            <summary>
              Looks up a localized string similar to {0} cannot contain a null (Nothing in Visual Basic) element..
            </summary>
        </member>
        <member name="P:System.Strings.ArgumentException_EmptyString">
            <summary>
              Looks up a localized string similar to {0} cannot be an empty string (&quot;&quot;)..
            </summary>
        </member>
        <member name="P:System.Strings.ArgumentOutOfRange_InvalidEnum">
            <summary>
              Looks up a localized string similar to The value of argument &apos;{0}&apos; ({1}) is invalid for Enum type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.ArgumentValueType">
            <summary>
              Looks up a localized string similar to The argument was a value type which is not supported..
            </summary>
        </member>
        <member name="P:System.Strings.AssemblyFileNotFoundOrWrongType">
            <summary>
              Looks up a localized string similar to Assembly file {0} is either not found or not a dll or exe file..
            </summary>
        </member>
        <member name="P:System.Strings.AssemblyInformationCannotBeCached">
            <summary>
              Looks up a localized string similar to Information about the assembly &apos;{0}&apos; because it has been loaded from the network or the byte stream. Only assemblies loaded from files on disk are supported..
            </summary>
        </member>
        <member name="P:System.Strings.BinderSelectFieldFailed">
            <summary>
              Looks up a localized string similar to The field name {0} could not be resolved to any field in this structure..
            </summary>
        </member>
        <member name="P:System.Strings.CacheableCatalogMustHaveProperConstructor">
            <summary>
              Looks up a localized string similar to The catalog &apos;{0}&apos; cannot be cached because it doesn&apos;t have a public constructor that accepts &apos;{1}&apos;  as an argument..
            </summary>
        </member>
        <member name="P:System.Strings.CachingFieldNotFound">
            <summary>
              Looks up a localized string similar to Invalid cache : field &apos;{1}&apos; on type &apos;{0}&apos; is not found..
            </summary>
        </member>
        <member name="P:System.Strings.CachingMethodNotFound">
            <summary>
              Looks up a localized string similar to Invalid cache : method &apos;{1}&apos; on type &apos;{0}&apos; is not found..
            </summary>
        </member>
        <member name="P:System.Strings.CachingTypeNotFound">
            <summary>
              Looks up a localized string similar to Invalid cache : type &apos;{0}&apos; is not found..
            </summary>
        </member>
        <member name="P:System.Strings.CannotChangeOnceSet">
            <summary>
              Looks up a localized string similar to Cannot change the value of {0} once it has been set..
            </summary>
        </member>
        <member name="P:System.Strings.CannotChangePackageDescription">
            <summary>
              Looks up a localized string similar to A package description cannot be changed once it has been added to a catalog..
            </summary>
        </member>
        <member name="P:System.Strings.CannotCreateMetadataView">
            <summary>
              Looks up a localized string similar to Cannot create a MetadataView of metadataViewType &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.CannotHaveNonStaticExportsInStaticComponentPart">
            <summary>
              Looks up a localized string similar to Cannot have non-static exports in static component part &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.CanOnlyExportFieldsPropertiesOrMethods">
            <summary>
              Looks up a localized string similar to Can only export fields, properties, or methods..
            </summary>
        </member>
        <member name="P:System.Strings.CanOnlySetToTrueOrFalse">
            <summary>
              Looks up a localized string similar to Can only set {0} to true or false..
            </summary>
        </member>
        <member name="P:System.Strings.CardinalityMismatch_NoExports">
            <summary>
              Looks up a localized string similar to No exports were found that match the constraint &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.CardinalityMismatch_TooManyExports">
            <summary>
              Looks up a localized string similar to More than one exports were found that match the constraint &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.CastStructuredValueFail">
            <summary>
              Looks up a localized string similar to Unable to cast structured value to &apos;{0}&apos;, because it is type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.CatalogInvalidPartDependency">
            <summary>
              Looks up a localized string similar to The part dependencies could not be resolved by this Catalog..
            </summary>
        </member>
        <member name="P:System.Strings.CatalogIsNotCacheable">
            <summary>
              Looks up a localized string similar to The catalog cannot be cached as at least one of the contained catalogs does not support caching : &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.ComposeTookTooManyIterations">
            <summary>
              Looks up a localized string similar to The composition failed because it did not complete within &apos;{0}&apos; iterations. Most likely caused by a cycle in the dependency graph of some component which has a factory creation policy..
            </summary>
        </member>
        <member name="P:System.Strings.CompositionContainer_ResolverAlreadyOwnedByContainer">
            <summary>
              Looks up a localized string similar to The specified ValueResolver is already owned by another CompositionContainer..
            </summary>
        </member>
        <member name="P:System.Strings.CompositionContainerIsLockedForNotify">
            <summary>
              Looks up a localized string similar to Operation can not be completed at this time because the CompositionContainer cannot be modified or queried while components are being notified that imports have been completed..
            </summary>
        </member>
        <member name="P:System.Strings.CompositionExceptionMessage">
            <summary>
              Looks up a localized string similar to The composition produced {0} composition issues. The first few issues of severity level &apos;error&apos; are provided below. Review the Issues collection for more detailed information..
            </summary>
        </member>
        <member name="P:System.Strings.ConstructedGenericMethodsNotSupported">
            <summary>
              Looks up a localized string similar to Constructed generic methods are not supported..
            </summary>
        </member>
        <member name="P:System.Strings.ContractMismatch_ExportedObjectCannotBeCastToT">
            <summary>
              Looks up a localized string similar to Unable to cast the underlying exported object of type &apos;{0}&apos; to type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCast">
            <summary>
              Looks up a localized string similar to Can&apos;t cast to type &apos;{0}&apos; from type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCastArgumentTypes">
            <summary>
              Looks up a localized string similar to Unable to project to contract &apos;{0}&apos; because method &apos;{1}&apos; has an argument &apos;{2}&apos; of type &apos;{3}&apos; which is not structurally compatible with the source argument of type &apos;{4}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCastInsufficientArguments">
            <summary>
              Looks up a localized string similar to Unable to project to contract &apos;{0}&apos; because method &apos;{1}&apos; provides &apos;{2}&apos; arguments and at least &apos;{3}&apos; are required..
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCastMarkerInterface">
            <summary>
              Looks up a localized string similar to Can&apos;t cast to type &apos;{0}&apos; because  it is a marker interface (it does not have any members).
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCastMissingFields">
            <summary>
              Looks up a localized string similar to Can&apos;t cast to type &apos;{0}&apos; because the source record is missing fields {1}.
            </summary>
        </member>
        <member name="P:System.Strings.ContractservicesCantCastNoConstructor">
            <summary>
              Looks up a localized string similar to Can&apos;t cast to type &apos;{0}&apos; because it does not have an accessible zero-argument constructor..
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCastNull">
            <summary>
              Looks up a localized string similar to Can&apos;t cast null to type &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCastSequenceCollection">
            <summary>
              Looks up a localized string similar to Can&apos;t cast to type &apos;{0} because the source of type &apos;{1}&apos; is not structurally compatible with ICollection&lt;StructuredValue&gt;.
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCastSequenceIncompatibleItems">
            <summary>
              Looks up a localized string similar to Can&apos;t cast to type &apos;{0}&apos; because the source items are not compatible with &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCastSequenceList">
            <summary>
              Looks up a localized string similar to Can&apos;t cast to type &apos;{0} because the source of type &apos;{1}&apos; is not structurally compatible with IList&lt;StructuredValue&gt;.
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCastToAtom">
            <summary>
              Looks up a localized string similar to Can&apos;t cast to type &apos;{0}&apos; because it is an atom and the source of type &apos;{1}&apos; is not nominally compatible.
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesCantCastToOpenGenericType">
            <summary>
              Looks up a localized string similar to Can&apos;t cast to type &apos;{0}&apos; because it is an open generic type..
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesEventProxyIsNotStructureProxy">
            <summary>
              Looks up a localized string similar to The proxy object is not an IStructureProjection.  Event proxy only works if the structure wraps a real object with a corresponding event of the same name..
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesEventRValueNotADelegate">
            <summary>
              Looks up a localized string similar to Event proxy can only be called if the argument to the event is a delegate..
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesEventValueNotFound">
            <summary>
              Looks up a localized string similar to The proxy structure does not contain an event named &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.ContractServicesRequiredFieldMissing">
            <summary>
              Looks up a localized string similar to Required field &apos;{0}&apos; is missing from a record.
            </summary>
        </member>
        <member name="P:System.Strings.CustomDelegateTypesNotSupported">
            <summary>
              Looks up a localized string similar to Custom delegate types not yet supported....
            </summary>
        </member>
        <member name="P:System.Strings.DirectoryNotFound">
            <summary>
              Looks up a localized string similar to Directory &apos;{0}&apos; could not be found..
            </summary>
        </member>
        <member name="P:System.Strings.ExceptionDuringAdapt">
            <summary>
              Looks up a localized string similar to An exception occurred while trying to adapt from contract &apos;{0}&apos; to contract &apos;{1}&apos;. Review the exception on the issue, and inspect the adapt method to correct the problem..
            </summary>
        </member>
        <member name="P:System.Strings.ExceptionDuringComponentActivation">
            <summary>
              Looks up a localized string similar to An exception occurred while trying to create an object of type &apos;{0}&apos;. Review the exception on the issue, and inspect the type to correct the problem..
            </summary>
        </member>
        <member name="P:System.Strings.ExceptionDuringGettingOfExport">
            <summary>
              Looks up a localized string similar to An exception occurred while trying to get the value of member ‘{0}’ on type ‘{1}’. Review the exception on the issue, and inspect the member to correct the problem..
            </summary>
        </member>
        <member name="P:System.Strings.ExceptionDuringImportCompletedCallback">
            <summary>
              Looks up a localized string similar to An exception occurred during ImportCompleted callback on type ‘{0}’. Review the exception on the issue, and inspect ImportCompleted to correct the problem..
            </summary>
        </member>
        <member name="P:System.Strings.ExceptionDuringSettingOfImport">
            <summary>
              Looks up a localized string similar to An exception occurred while trying to set the value of member ‘{0}’ on type ‘{1}’. Review the exception on the issue, and inspect the member to correct the problem..
            </summary>
        </member>
        <member name="P:System.Strings.ExportDefinitionNotOnThisComposablePart">
            <summary>
              Looks up a localized string similar to {0} did not originate from the ExportDefinitions property on this ComposablePart or its ComposablePartDefinition..
            </summary>
        </member>
        <member name="P:System.Strings.ExportNotFound">
            <summary>
              Looks up a localized string similar to Export not found.
            </summary>
        </member>
        <member name="P:System.Strings.FailedToFindImplementationTypeForComponent">
            <summary>
              Looks up a localized string similar to Unable to find a suitable implementation type for the part named &apos;{0}&apos; in the package named &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.FieldIsReadOnly">
            <summary>
              Looks up a localized string similar to Field ({0}) is read-only and cannot be updated.
            </summary>
        </member>
        <member name="P:System.Strings.ImportCollectionFailedCollectionNotWritable">
            <summary>
              Looks up a localized string similar to Could not populate collection. A component of type &apos;{0}&apos; has a member named &apos;{1}&apos; importing the value &apos;{2}&apos; that is of type &apos;{3}&apos;. The Import is declared as a collection, but it is not a writable type..
            </summary>
        </member>
        <member name="P:System.Strings.ImportCollectionFailedCollectionNull">
            <summary>
              Looks up a localized string similar to Could not populate null collection value. A component of type &apos;{0}&apos; has a member named &apos;{1}&apos; importing the value &apos;{2}&apos; that is a collection of type &apos;{3}&apos; that is initialized to null. It must be either initialized by the object or writable and assignable from type &apos;{4}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.ImportCycle">
            <summary>
              Looks up a localized string similar to A cycle exists in the dependencies between the exports being composed. To break this cycle, consider changing some imports from constructor to property injection..
            </summary>
        </member>
        <member name="P:System.Strings.ImportDefinitionNotOnThisComposablePart">
            <summary>
              Looks up a localized string similar to {0} did not originate from the ImportDefinitions property on this ComposablePart or its ComposablePartDefinition..
            </summary>
        </member>
        <member name="P:System.Strings.ImportNotSetOnPart">
            <summary>
              Looks up a localized string similar to Could not finishing composing object of type &apos;{0}&apos;. The import &apos;{1}&apos; was not satisfied..
            </summary>
        </member>
        <member name="P:System.Strings.ImportSingleValueFailedNotWritable">
            <summary>
              Looks up a localized string similar to Could not set import value. A component of type &apos;{0}&apos; has a member named &apos;{1}&apos; importing the value &apos;{2}&apos; that is of type &apos;{3}&apos;. The import is not writable, verify that the types are assignable or if the member is a property verify that it has a setter..
            </summary>
        </member>
        <member name="P:System.Strings.InternalExceptionMessage">
            <summary>
              Looks up a localized string similar to Internal error occurred. Additional information: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.InvalidCacheToken">
            <summary>
              Looks up a localized string similar to Invalid cache token : &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:System.Strings.InvalidExportMetadata">
            <summary>
              Looks up a localized string similar to Invalid metadata &apos;{0}&apos; on the export &apos;{1}&apos; was found. This could be because of  repeatedly using single item metadata, mixing single item metadata and collection metadata, multiple application of container specific metadata attribute on the same export member, or metadata provided by container specific attribute conflicting with those provided by general approach..
            </summary>
        </member>
        <member name="P:System.Strings.InvalidMetadataView">
            <summary>
              Looks up a localized string similar to The Type &apos;{0}&apos; supplied is not a valid Metadata View..
            </summary>
        </member>
        <member name="P:System.Strings.InvalidOperationReentrantCompose">
            <summary>
              Looks up a localized string similar to A call to Compose occurred during a call to Compose on the same CompositionContainer object. Use the IsComposing property on CompositionContainer to ensure a composition is not already in progress before calling Compose..
            </summary>
        </member>
        <member name="P:System.Strings.MembersDictionaryCantClear">
            <summary>
              Looks up a localized string similar to Unable to Clear the dictionary because it is read only..
            </summary>
        </member>
        <member name="P:System.Strings.MetadataItemNotSupported">
            <summary>
              Looks up a localized string similar to This export does not support the metadata item &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.MustProvideExportNameWhenExportingMethods">
            <summary>
              Looks up a localized string similar to Must provide export name specifically when exporting methods..
            </summary>
        </member>
        <member name="P:System.Strings.NoExportsThatMatchConstraint">
            <summary>
              Looks up a localized string similar to There were no exports found that match the constraint &apos;{0}&apos;. The import for this contract requires exactly one export..
            </summary>
        </member>
        <member name="P:System.Strings.NoLoaderFoundForTypeOfSpecifiedPackage">
            <summary>
              Looks up a localized string similar to No loader can be found for the type &apos;{0}&apos; of the specified package..
            </summary>
        </member>
        <member name="P:System.Strings.NoSelectedConstructor">
            <summary>
              Looks up a localized string similar to There is not exactly one selected constructor nor is there a default constructor on type &apos;{0}&apos;. The type needs to either have a single constructor marked with the ImportingConstructorAttribute or it needs to contain a default constructor..
            </summary>
        </member>
        <member name="P:System.Strings.NotImplemented_NotOverriddenByDerived">
            <summary>
              Looks up a localized string similar to The {0} member must be overridden by a derived class..
            </summary>
        </member>
        <member name="P:System.Strings.NotSupportedReadOnlyDictionary">
            <summary>
              Looks up a localized string similar to The underlying dictionary is read-only..
            </summary>
        </member>
        <member name="P:System.Strings.ObjectAlreadyInitialized">
            <summary>
              Looks up a localized string similar to This property cannot be set after the object&apos;s public surface has been accessed..
            </summary>
        </member>
        <member name="P:System.Strings.ObjectMustBeInitialized">
            <summary>
              Looks up a localized string similar to This object has not been initialized - the property &apos;{0}&apos; must be set..
            </summary>
        </member>
        <member name="P:System.Strings.OperationBindSingletonOnMultiplexer">
            <summary>
              Looks up a localized string similar to SelectOperation cannot be called as a singleton when the operation is a multiplexer..
            </summary>
        </member>
        <member name="P:System.Strings.OperationCreateOverloadFailed">
            <summary>
              Looks up a localized string similar to Unable to create an overloaded operation.  The following values in the sequence are not valid operations:.
            </summary>
        </member>
        <member name="P:System.Strings.OperationInvalidOverloadValue">
            <summary>
              Looks up a localized string similar to One of the values in the sequence is not a valid operation.  A valid operation must be of type Delegate, MethodInfo, or ConstructorInfo..
            </summary>
        </member>
        <member name="P:System.Strings.OperationMethodIsAbstract">
            <summary>
              Looks up a localized string similar to The method &apos;{0}&apos; from type &apos;{1}&apos; can not be invoked as an operation because it is abstract..
            </summary>
        </member>
        <member name="P:System.Strings.OperationOverloadFailedNoMatch">
            <summary>
              Looks up a localized string similar to Unable to execute operation given the set of arguments.  There is no matching overload that takes those arguments..
            </summary>
        </member>
        <member name="P:System.Strings.OperationServicesInvalidTypeArgument">
            <summary>
              Looks up a localized string similar to Expecting type argument. Element &apos;{0}[{1}]&apos; is not of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.OperationSignatureMismatch">
            <summary>
              Looks up a localized string similar to An operation was called with the wrong number or type of arguments.  The expected signature was {3} parameters of type &apos;{1}&apos; and the actual signature was {2} parameters of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.PackageIsNotAssembly">
            <summary>
              Looks up a localized string similar to Provided package is not a CLR assembly.
            </summary>
        </member>
        <member name="P:System.Strings.PackageNotFound">
            <summary>
              Looks up a localized string similar to The specified package ({0}) could not be found in this catalog..
            </summary>
        </member>
        <member name="P:System.Strings.PartActivatorNotFound">
            <summary>
              Looks up a localized string similar to No activator for the type of the specified part ({0}) could be found..
            </summary>
        </member>
        <member name="P:System.Strings.PartNotFound">
            <summary>
              Looks up a localized string similar to Part not found.
            </summary>
        </member>
        <member name="P:System.Strings.ProjectionContextAmbiguousInterfaceMatch">
            <summary>
              Looks up a localized string similar to ProjectionContext found multiple adapters for type &apos;{0}&apos; because it implements interface &apos;{1}&apos; as well as interface &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:System.Strings.ProjectionContextFrozen">
            <summary>
              Looks up a localized string similar to Unable to register adapter for type &apos;{0}&apos; because the mapping context has been frozen.
            </summary>
        </member>
        <member name="P:System.Strings.ProjectToStructureWrongKind">
            <summary>
              Looks up a localized string similar to Unable to project value of type &apos;{0}&apos; to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.RecordDoesNotContainFieldName">
            <summary>
              Looks up a localized string similar to The record does not contain a field named ({0}).
            </summary>
        </member>
        <member name="P:System.Strings.RecordDuplicateMemberName">
            <summary>
              Looks up a localized string similar to The member ({0}) already exists in the record..
            </summary>
        </member>
        <member name="P:System.Strings.RecordIsNotExtensible">
            <summary>
              Looks up a localized string similar to Cannot add, insert or remove the member named &apos;{0}&apos; to the record because the record is not extensible.
            </summary>
        </member>
        <member name="P:System.Strings.RecordMemberIdentifierEmpty">
            <summary>
              Looks up a localized string similar to Unable to create a RecordMemberIdentifier from an empty string..
            </summary>
        </member>
        <member name="P:System.Strings.RecordMemberIdentifierMemberNamePeriod">
            <summary>
              Looks up a localized string similar to The memberName &apos;{1}&apos; is invalid because it contains a &apos;.&apos; character..
            </summary>
        </member>
        <member name="P:System.Strings.RecordMemberIdentifierNoType">
            <summary>
              Looks up a localized string similar to Unable to create a RecordMemberIdentifier from the string &apos;{0}&apos; because no type was specified.  A valid format is {{namespace}}Type.Name..
            </summary>
        </member>
        <member name="P:System.Strings.RecordMemberIdentifierTypeNamePeriod">
            <summary>
              Looks up a localized string similar to The typeName &apos;{0}&apos; is invalid because the LocalName contains a &apos;.&apos; character..
            </summary>
        </member>
        <member name="P:System.Strings.RecordMemberNotExpectedType">
            <summary>
              Looks up a localized string similar to The RecordMember &apos;{0}&apos; is not of the expected type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:System.Strings.RecordValueIsNotAnOperation">
            <summary>
              Looks up a localized string similar to The value of type &apos;{0}&apos; is not a well-formed Operation.  Valid types are any delegate, MethodInfo, or LambdaExpression..
            </summary>
        </member>
        <member name="P:System.Strings.RecordValueIsReadOnly">
            <summary>
              Looks up a localized string similar to Record value is read-only.
            </summary>
        </member>
        <member name="P:System.Strings.RequiredMetadataNotFound">
            <summary>
              Looks up a localized string similar to An export was found meeting the contract &apos;{0}&apos;, but it was ignored because the required metadata &apos;{1}&apos; was not found. The required metadata of an import could be specified by using ImportRequiredMetadataAttribute attribute or strongly typed metadata..
            </summary>
        </member>
        <member name="P:System.Strings.SequenceCopyToIndex">
            <summary>
              Looks up a localized string similar to CopyTo is unable to copy {0} items to an array of length {1} starting at index {2}..
            </summary>
        </member>
        <member name="P:System.Strings.SequenceNotRefillable">
            <summary>
              Looks up a localized string similar to Operation &apos;{0}&apos; can not be performed on a value of type &apos;{1}&apos; as a collection.  A type is considered a collection because it implements GetEnumerator and Add methods.  However, this one does not also implement the Clear or Remove method..
            </summary>
        </member>
        <member name="P:System.Strings.SequenceReadOnly">
            <summary>
              Looks up a localized string similar to The sequence can not be modified because it is read-only..
            </summary>
        </member>
        <member name="P:System.Strings.SetMethodsNotSupported">
            <summary>
              Looks up a localized string similar to Set Methods not supported &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.StronglyTypedMetadataNotSupportedOnSilverlight">
            <summary>
              Looks up a localized string similar to Strongly typed metadata is not supported on Silverlight..
            </summary>
        </member>
        <member name="P:System.Strings.TooManyExportsThatMatchConstraint">
            <summary>
              Looks up a localized string similar to Multiple exports were found that match the constraint &apos;{0}&apos;. The import for this contract requires a single export only..
            </summary>
        </member>
        <member name="P:System.Strings.TypeConverterReturnedWrongType">
            <summary>
              Looks up a localized string similar to A TypeConverter returned a value of type &apos;{0}&apos; when it was supposed to return a value of type &apos;{1}&apos;.  The input value was of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.TypeMismatchBetweenImportAndExport">
            <summary>
              Looks up a localized string similar to Type mismatch on contract &apos;{0}&apos; between an export of type &apos;{1}&apos; and import of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.UnsupportedCachedValue">
            <summary>
              Looks up a localized string similar to Objects of type &apos;{0}&apos; cannot be written into the cache..
            </summary>
        </member>
        <member name="P:System.Strings.UriMustBeAssemblyName">
            <summary>
              Looks up a localized string similar to Uri must be of the assembly name scheme..
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportProvider">
            <summary>
                Defines the <see langword="abstract"/> base class for export providers, which provide
                methods for retrieving <see cref="T:System.ComponentModel.Composition.Export"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportProvider"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.ExportsChangedEventArgs)">
            <summary>
                Raises the <see cref="E:System.ComponentModel.Composition.ExportProvider.ExportsChanged"/> event.
            </summary>
            <param name="e">
                An <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/> containing the data for the event.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExportsCore(System.ComponentModel.Composition.ImportDefinition)">
            <summary>
                Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="importDefinition">
                The <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Export"/> objects to get.
            </param>
            <result>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/> objects that match 
                the conditions defined by <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>, if found; otherwise, an 
                empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this method should not treat cardinality-related mismatches 
                    as errors, and should not throw exceptions in those cases. For instance,
                    if <see cref="P:System.ComponentModel.Composition.ImportDefinition.Cardinality"/> is <see cref="F:System.ComponentModel.Composition.ImportCardinality.ExactlyOne"/> 
                    and there are zero <see cref="T:System.ComponentModel.Composition.Export"/> objects that match the conditions of the 
                    specified <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>, an <see cref="T:System.Collections.Generic.IEnumerable`1"/> should be returned.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExports(System.ComponentModel.Composition.ImportDefinition)">
            <summary>
                Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="importDefinition">
                The <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Export"/> objects to get.
            </param>
            <result>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/> objects that match 
                the conditions defined by <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>, if found; otherwise, an 
                empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="importDefinition"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    <see cref="P:System.ComponentModel.Composition.ImportDefinition.Cardinality"/> is <see cref="F:System.ComponentModel.Composition.ImportCardinality.ExactlyOne"/> and 
                    there are zero <see cref="T:System.ComponentModel.Composition.Export"/> objects that match the conditions of the specified 
                    <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>.
                </para>
                -or-
                <para>
                    <see cref="P:System.ComponentModel.Composition.ImportDefinition.Cardinality"/> is <see cref="F:System.ComponentModel.Composition.ImportCardinality.ZeroOrOne"/> or 
                    <see cref="F:System.ComponentModel.Composition.ImportCardinality.ExactlyOne"/> and there are more than one <see cref="T:System.ComponentModel.Composition.Export"/> 
                    objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>.
                </para>
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.TryGetExports(System.ComponentModel.Composition.ImportDefinition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Export}@)">
            <summary>
                Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="importDefinition">
                The <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> that defines the conditions of the 
                <see cref="T:System.ComponentModel.Composition.Export"/> objects to get.
            </param>
            <param name="exports">
                When this method returns, contains an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/> 
                objects that match the conditions defined by <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>, if found; 
                otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </param>
            <returns>
                <see langword="true"/> if <see cref="P:System.ComponentModel.Composition.ImportDefinition.Cardinality"/> is 
                <see cref="F:System.ComponentModel.Composition.ImportCardinality.ZeroOrOne"/> or <see cref="F:System.ComponentModel.Composition.ImportCardinality.ZeroOrMore"/> and 
                there are zero <see cref="T:System.ComponentModel.Composition.Export"/> objects that match the conditions of the specified 
                <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>. <see langword="true"/> if 
                <see cref="P:System.ComponentModel.Composition.ImportDefinition.Cardinality"/> is <see cref="F:System.ComponentModel.Composition.ImportCardinality.ZeroOrOne"/> or 
                <see cref="F:System.ComponentModel.Composition.ImportCardinality.ExactlyOne"/> and there is exactly one <see cref="T:System.ComponentModel.Composition.Export"/> 
                that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>; otherwise, 
                <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="importDefinition"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExport``1">
            <summary>
                Returns the export with the contract name derived from the specified type parameter, 
                throwing an exception if there is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> object to return. The contract name is also 
                derived from this type parameter.
            </typeparam>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`1"/> object with the contract name derived from 
                <typeparamref name="T"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> object is an instance of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`1"/> objects with the contract name derived 
                    from <typeparamref name="T"/> in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`1"/> objects with the contract name 
                    derived from <typeparamref name="T"/> in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExport``1(System.String)">
            <summary>
                Returns the export with the specified contract name, throwing an exception if there 
                is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> object to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the <see cref="T:System.ComponentModel.Composition.Export`1"/> 
                object to return; or <see langword="null"/> or an empty string ("") to use the 
                default contract name.
            </param>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`1"/> object with the specified contract name.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> object is an instance of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The default contract name is compared using a case-sensitive, non-linguistic 
                    comparison using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`1"/> objects with the specified contract name 
                    in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`1"/> objects with the specified contract
                    name in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExport``1(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the export that matches the conditions defined by the specified constraint, 
                throwing an exception if there is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> object to return.
            </typeparam>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Export`1"/> object to return or 
                <see langword="null"/> to use the default contract name as the constraint.
            </param>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`1"/> object that matches the conditions defined by 
                <paramref name="constraint"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> object is an instance of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The default contract name is compared using a case-sensitive, non-linguistic 
                    comparison using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`1"/> objects that match the conditions 
                    defined by <paramref name="constraint"/> in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`1"/> objects that match the conditions 
                    defined by <paramref name="constraint"/> in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExport``2">
            <summary>
                Returns the export with the contract name derived from the specified type parameter, 
                throwing an exception if there is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object to return. The 
                contract name is also derived from this type parameter.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object
                to return.
            </typeparam>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`2"/> object with the contract name derived 
                from <typeparamref name="T"/>.
            </returns>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the contract 
                    name derived from <typeparamref name="T"/> in the 
                    <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the 
                    contract name derived from <typeparamref name="T"/> in the 
                    <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExport``2(System.String)">
            <summary>
                Returns the export with the specified contract name, throwing an exception if there 
                is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object to return.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object
                to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> object to return; or <see langword="null"/> 
                or an empty string ("") to use the default contract name.
            </param>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`2"/> object with the specified contract name.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the 
                    specified contract name in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the 
                    specified contract name in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExport``2(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the export that matches the conditions defined by the specified constraint,
                throwing an exception if there is not exactly one matching export.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object to return.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object
                to return.
            </typeparam>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Export`2"/> object to 
                return or <see langword="null"/> to use the default contract name as the constraint.
            </param>
            <returns>
                The <see cref="T:System.ComponentModel.Composition.Export`2"/> object that matches the conditions 
                defined by <paramref name="constraint"/>.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero <see cref="T:System.ComponentModel.Composition.Export`2"/> objects that match the 
                    conditions defined by <paramref name="constraint"/> in the 
                    <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one <see cref="T:System.ComponentModel.Composition.Export`2"/> objects that match 
                    the conditions defined by <paramref name="constraint"/> in the 
                    <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExports(System.Type,System.Type,System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the exports that match the conditions defined by the specified constraint.
            </summary>
            <param name="type">
                The <see cref="T:System.Type"/> of the <see cref="T:System.ComponentModel.Composition.Export"/> objects to return.
            </param>
            <param name="metadataViewType">
                The <see cref="T:System.Type"/> of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export"/> objects to
                return.
            </param>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Export"/> objects to return or
                <see langword="null"/> to use the default contract name as the constraint.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection"/> containing the <see cref="T:System.ComponentModel.Composition.Export"/> objects that 
                match the conditions defined by the specified constraint, if found; otherwise, an 
                empty <see cref="T:System.ComponentModel.Composition.ExportCollection"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export"/> objects are instances of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where <c>T</c>
                    is <paramref name="type"/> and <c>TMetadataView</c> is 
                    <paramref name="metadataViewType"/>.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <paramref name="type"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="type"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExports``1">
            <summary>
                Returns the exports with the contract name derived from the specified type parameter.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects to return. The contract name is also 
                derived from this type parameter.
            </typeparam>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> containing the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects
                with the contract name derived from <typeparamref name="T"/>, if found; otherwise,
                an empty <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> objects are instances of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExports``1(System.String)">
            <summary>
                Returns the exports with the specified contract name.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the <see cref="T:System.ComponentModel.Composition.Export`1"/> 
                objects to return; or <see langword="null"/> or an empty string ("") to use the 
                default contract name.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> containing the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects
                with the specified contract name, if found; otherwise, an empty 
                <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> objects are instances of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExports``1(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the exports that match the conditions defined by the specified constraint.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects to return.
            </typeparam>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects to 
                return or <see langword="null"/> to use the default contract name as the constraint.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> containing the <see cref="T:System.ComponentModel.Composition.Export`1"/> objects
                that match the conditions defined by the specified constraint, if found; otherwise, 
                an empty <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/>.
            </returns>
            <remarks>
                <para>
                    The returned <see cref="T:System.ComponentModel.Composition.Export`1"/> objects are instances of 
                    <see cref="T:System.ComponentModel.Composition.Export`2"/> underneath, where 
                    <c>TMetadataView</c>
                    is <see cref="T:System.Collections.Generic.IDictionary`2"/> and where <c>TKey</c> 
                    is <see cref="T:System.String"/> and <c>TValue</c> is <see cref="T:System.Object"/>.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExports``2">
            <summary>
                Returns the exports with the contract name derived from the specified type parameter.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to return. The 
                contract name is also derived from this type parameter.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects
                to return.
            </typeparam>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the contract name derived from 
                <typeparamref name="T"/>, if found; otherwise, an empty 
                <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/>.
            </returns>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExports``2(System.String)">
            <summary>
                Returns the exports with the specified contract name.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to return. The 
                contract name is also derived from this type parameter.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects
                to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to return; or <see langword="null"/> 
                or an empty string ("") to use the default contract name.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> objects with the specified contract name if 
                found; otherwise, an empty <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/>.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExports``2(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the exports that match the conditions defined by the specified constraint.
            </summary>
            <typeparam name="T">
                The type of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to return.
            </typeparam>
            <typeparam name="TMetadataView">
                The type of the metadata view of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects
                to return.
            </typeparam>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to 
                return or <see langword="null"/> to use the default contract name as the constraint.
            </param>
            <returns>
                An <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> objects that match the conditions defined by 
                the specified constraint, if found; otherwise, an empty 
                <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/>.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExportedObject``1">
            <summary>
                Returns the exported object with the contract name derived from the specified type 
                parameter, throwing an exception if there is not exactly one matching exported object.
            </summary>
            <typeparam name="T">
                The type of the exported object to return. The contract name is also 
                derived from this type parameter.
            </typeparam>
            <returns>
                The exported <see cref="T:System.Object"/> with the contract name derived from 
                <typeparamref name="T"/>.
            </returns>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The underlying exported object cannot be cast to <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero exported objects with the contract name derived from 
                    <typeparamref name="T"/> in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one exported objects with the contract name derived from
                    <typeparamref name="T"/> in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will 
                contain a list of errors that occurred.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExportedObject``1(System.String)">
            <summary>
                Returns the exported object with the specified contract name, throwing an exception 
                if there is not exactly one matching exported object.
            </summary>
            <typeparam name="T">
                The type of the exported object to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the exported object to return,
                or <see langword="null"/> or an empty string ("") to use the default contract name.
            </param>
            <returns>
                The exported <see cref="T:System.Object"/> with the specified contract name.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The underlying exported object cannot be cast to <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are zero exported objects with the specified contract name in the 
                    <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
                -or-
                <para>
                    There are more than one exported objects with the specified contract name in the
                    <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will 
                contain a list of errors that occurred.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExportedObjectOrDefault``1">
            <summary>
                Returns the exported object with the contract name derived from the specified type 
                parameter, throwing an exception if there is more than one matching exported object.
            </summary>
            <typeparam name="T">
                The type of the exported object to return. The contract name is also 
                derived from this type parameter.
            </typeparam>
            <returns>
                The exported <see cref="T:System.Object"/> with the contract name derived from 
                <typeparamref name="T"/>, if found; otherwise, the default value for
                <typeparamref name="T"/>.
            </returns>
            <remarks>
                <para>
                    If the exported object is not found, then this method returns the appropriate 
                    default value for <typeparamref name="T"/>; for example, 0 (zero) for integer 
                    types, <see langword="false"/> for Boolean types, and <see langword="null"/> 
                    for reference types.
                </para>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The underlying exported object cannot be cast to <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                <para>
                    There are more than one exported objects with the contract name derived from
                    <typeparamref name="T"/> in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
                </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will 
                contain a list of errors that occurred.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExportedObjectOrDefault``1(System.String)">
            <summary>
                Returns the exported object with the specified contract name, throwing an exception 
                if there is more than one matching exported object.
            </summary>
            <typeparam name="T">
                The type of the exported object to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the exported object to return,
                or <see langword="null"/> or an empty string ("") to use the default contract name.
            </param>
            <returns>
                The exported <see cref="T:System.Object"/> with the specified contract name, if found; 
                otherwise, the default value for <typeparamref name="T"/>.
            </returns>
            <remarks>
                <para>
                    If the exported object is not found, then this method returns the appropriate 
                    default value for <typeparamref name="T"/>; for example, 0 (zero) for integer 
                    types, <see langword="false"/> for Boolean types, and <see langword="null"/> 
                    for reference types.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The underlying exported object cannot be cast to <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CardinalityMismatchException">
                There are more than one exported objects with the specified contract name in the
                <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will 
                contain a list of errors that occurred.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExportedObjects``1">
            <summary>
                Returns the exported objects with the contract name derived from the specified type 
                parameter.
            </summary>
            <typeparam name="T">
                The type of the exported object to return. The contract name is also 
                derived from this type parameter.
            </typeparam>
            <returns>
                An <see cref="T:System.Collections.ObjectModel.Collection`1"/> containing the exported objects with the contract name 
                derived from the specified type parameter, if found; otherwise, an empty 
                <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </returns>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                One or more of the underlying exported objects cannot be cast to 
                <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will 
                contain a list of errors that occurred.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportProvider.GetExportedObjects``1(System.String)">
            <summary>
                Returns the exported objects with the specified contract name.
            </summary>
            <typeparam name="T">
                The type of the exported object to return.
            </typeparam>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the exported objects to 
                return; or <see langword="null"/> or an empty string ("") to use the default 
                contract name.
            </param>
            <returns>
                An <see cref="T:System.Collections.ObjectModel.Collection`1"/> containing the exported objects with the specified 
                contract name, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </returns>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                One or more of the underlying exported objects cannot be cast to 
                <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will 
                contain a list of errors that occurred.
            </exception>
        </member>
        <member name="E:System.ComponentModel.Composition.ExportProvider.ExportsChanged">
            <summary>
                Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.ExportProvider"/> change.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.AdaptingExportProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AdaptingExportProvider"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.AdaptingExportProvider.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.AdaptingExportProvider.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.AdaptingExportProvider.OnExportsChanged(System.ComponentModel.Composition.ExportsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Composition.AggregatingExportProvider.ExportsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.AdaptingExportProvider.GetExportsCore(System.ComponentModel.Composition.ImportDefinition)">
            <summary>
            Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="importDefinition">The <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> that defines the conditions of the
            <see cref="T:System.ComponentModel.Composition.Export"/> to get.</param>
            <returns></returns>
            <result>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/> objects that match
            the conditions defined by <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>, if found; otherwise, an
            empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
            	<note type="inheritinfo">
            The implementers should not treat the cardinality-related mismatches as errors, and are not
            expected to throw exceptions in those cases.
            For instance, if the import requests exactly one export and the provider has no matching exports or more than one,
            it should return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/>.
            </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.AdaptingExportProvider.SourceProvider">
            <summary>
            Gets or sets the source provider.
            </summary>
            <value>The source provider.</value>
        </member>
        <member name="E:System.ComponentModel.Composition.AdaptingExportProvider.ExportsChanged">
            <summary>
                Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.ExportProvider"/> change.
            </summary>
            <remarks>
                The <see cref="E:System.ComponentModel.Composition.AdaptingExportProvider.ExportsChanged"/> event passes an <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/>
                which provides a list of contract names for the exports that have changed. An export
                is considered to have changed if it has been added, removed, or updated in the 
                <see cref="T:System.ComponentModel.Composition.AdaptingExportProvider"/>.
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.ComposablePart">
            <summary>
                Defines the <see langword="abstract"/> base class for composable parts, which 
                import and produce exported objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePart.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ComposablePart"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePart.Dispose">
            <summary>
                Releases all resources used by the <see cref="T:System.ComponentModel.Composition.ComposablePart"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePart.OnComposed">
            <summary>
                Called by the composition engine when all required imports on the part have been
                satisfied.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePart.GetExportedObject(System.ComponentModel.Composition.ExportDefinition)">
            <summary>
                Gets the exported object described by the specified definition.
            </summary>
            <param name="definition">
                One of the <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects from the 
                <see cref="P:System.ComponentModel.Composition.ComposablePart.ExportDefinitions"/> property describing the exported object
                to return.
            </param>
            <returns>
                The exported <see cref="T:System.Object"/> described by <paramref name="definition"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="definition"/> did not originate from the <see cref="P:System.ComponentModel.Composition.ComposablePart.ExportDefinitions"/>
                property on the <see cref="T:System.ComponentModel.Composition.ComposablePart"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePart.SetImport(System.ComponentModel.Composition.ImportDefinition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Export})">
            <summary>
                Sets the import described by the specified definition with the specified exports.
            </summary>
            <param name="import">
                One of the <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> objects from the 
                <see cref="P:System.ComponentModel.Composition.ComposablePart.ImportDefinitions"/> property describing the import to be set.
            </param>
            <param name="exports">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/> objects of which 
                to set the import described by <paramref name="definition"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exports"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exports"/> contains an element that is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="definition"/> did not originate from the <see cref="P:System.ComponentModel.Composition.ComposablePart.ImportDefinitions"/>
                property on the <see cref="T:System.ComponentModel.Composition.ComposablePart"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePart.Dispose(System.Boolean)">
            <summary>
                Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.ComposablePart"/> and 
                optionally releases the managed resources.
            </summary>
            <param name="disposing">
                <see langword="true"/> to release both managed and unmanaged resources; 
                <see langword="false"/> to release only unmanaged resources.
            </param>
        </member>
        <member name="P:System.ComponentModel.Composition.ComposablePart.ExportDefinitions">
            <summary>
                Gets the export definitions that describe the exported objects provided by the part.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects describing
                the exported objects provided by the <see cref="T:System.ComponentModel.Composition.ComposablePart"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        If the <see cref="T:System.ComponentModel.Composition.ComposablePart"/> was created from a 
                        <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/>, this property should return the result of 
                        <see cref="P:System.ComponentModel.Composition.ComposablePartDefinition.ExportDefinitions"/>.
                    </note>
                 </para>
                 <para>
                    <note type="inheritinfo">
                        Overriders of this property should never return <see langword="null"/>.
                        If the <see cref="T:System.ComponentModel.Composition.ComposablePart"/> does not have exports, return an empty 
                        <see cref="T:System.Collections.Generic.IEnumerable`1"/> instead.
                    </note>
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ComposablePart.ImportDefinitions">
            <summary>
                Gets the import definitions that describe the imports required by the part.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> objects describing
                the imports required by the <see cref="T:System.ComponentModel.Composition.ComposablePart"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        If the <see cref="T:System.ComponentModel.Composition.ComposablePart"/> was created from a 
                        <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/>, this property should return the result of 
                        <see cref="P:System.ComponentModel.Composition.ComposablePartDefinition.ImportDefinitions"/>.
                    </note>
                 </para>
                 <para>
                    <note type="inheritinfo">
                        Overrides of this property should never return <see langword="null"/>.
                        If the <see cref="T:System.ComponentModel.Composition.ComposablePart"/> does not have imports, return an empty 
                        <see cref="T:System.Collections.Generic.IEnumerable`1"/> instead.
                    </note>
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ComposablePart.Metadata">
            <summary>
                Gets the metadata of the part.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.ComposablePart"/>. The default is an empty, read-only
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        If the <see cref="T:System.ComponentModel.Composition.ComposablePart"/> was created from a 
                        <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/>, this property should return the result of 
                        <see cref="P:System.ComponentModel.Composition.ComposablePartDefinition.Metadata"/>.
                    </note>
                 </para>
                 <para>
                    <note type="inheritinfo">
                        Overriders of this property should return a read-only
                        <see cref="T:System.Collections.Generic.IDictionary`2"/> object with a case-sensitive, 
                        non-linguistic comparer, such as <see cref="P:System.StringComparer.Ordinal"/>, 
                        and should never return <see langword="null"/>. If the 
                        <see cref="T:System.ComponentModel.Composition.ComposablePart"/> does not contain metadata, return an 
                        empty <see cref="T:System.Collections.Generic.IDictionary`2"/> instead.
                    </note>
                 </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog">
            <summary>
                A mutable collection of ComposablePartCatalogs.  The events are called back using the
                synchronization context created when the instance is constructed.
            </summary>
            <remarks>
                This type is thread safe.
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.ComposablePartCatalog">
            <summary>
                Defines the <see langword="abstract"/> base class for composable part catalogs, which produce
                and return <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects.
            </summary>
            <remarks>
                This type is thread safe.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartCatalog.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartCatalog.GetExports(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the export definitions that match the conditions defined by the specified constraint.
            </summary>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects to return.
            </param>
            <returns>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.Tuple`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects and their associated 
                <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects that match the conditions defined 
                by <paramref name="constraint"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="constraint"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/> has been disposed of.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>, if no 
                    <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> match the conditions defined by 
                    <paramref name="constraint"/>, return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartCatalog.Dispose">
            <summary>
                Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/> and 
                optionally releases the managed resources.
            </summary>
            <param name="disposing">
                <see langword="true"/> to release both managed and unmanaged resources; 
                <see langword="false"/> to release only unmanaged resources.
            </param>
        </member>
        <member name="P:System.ComponentModel.Composition.ComposablePartCatalog.Parts">
            <summary>
                Gets the part definitions of the catalog.
            </summary>
            <value>
                A <see cref="T:System.Linq.IQueryable`1"/> of <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects of the 
                <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/> has been disposed of.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>.
                </note>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.INotifyComposablePartCatalogChanged">
            <summary>
                Notifications when a ComposablePartCatalog changes.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ICachedComposablePartCatalog.CacheCatalog(System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter)">
            <summary>
            Caches the contents of the catalog using the specified  <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/>.
            </summary>
            <param name="writer">The cache writer.</param>
            <returns>The cache token corresponding to the written catalog cache.</returns>
        </member>
        <member name="P:System.ComponentModel.Composition.Caching.ICachedComposablePartCatalog.IsCacheUpToDate">
            <summary>
            Specifies whether the cache the state of the catalog has changed since the last time it was read from the cache.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingComposablePartCatalog.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingComposablePartCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.ComposablePartCatalog})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/> class
                with the specified catalogs.
            </summary>
            <param name="catalogs">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/> objects to add
                to the <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/>; or <see langword="null"/> to 
                create an <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/> that is empty.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="catalogs"/> contains an element that is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingComposablePartCatalog.#ctor(System.ComponentModel.Composition.Caching.ComposablePartCatalogCache)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/> class 
                with the specified cache.
            </summary>
            <param name="cache">
                The <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache"/> to read the <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/> 
                from.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="cache"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingComposablePartCatalog.CacheCatalog(System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter)">
            <summary>
               Caches the catalog using the specified cache writer
            </summary>
            <param name="writer">
               The <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> to use to cache the 
               <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/>.
            </param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingComposablePartCatalog.GetExports(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the export definitions that match the conditions defined by the specified constraint.
            </summary>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects to return.
            </param>
            <returns>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.Tuple`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects and their associated 
                <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects that matche the conditions defined 
                by <paramref name="constraint"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="constraint"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.AggregatingComposablePartCatalog.IsCacheUpToDate">
            <summary>
                Gets a value indicating whether the underlying cache is up-to-date.
            </summary>
            <value>
                <see langword="true"/> if the underlying <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache"/> 
                is up-to-date; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.AggregatingComposablePartCatalog.Parts">
            <summary>
                Gets the part definitions of the catalog.
            </summary>
            <value>
                A <see cref="T:System.Linq.IQueryable`1"/> of <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects of the 
                <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.AggregatingComposablePartCatalog.Catalogs">
            <summary>
                Gets the underlying catalogs of the catalog.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.ICollection`1"/> of underlying <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/> objects
                of the <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AggregatingComposablePartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="E:System.ComponentModel.Composition.AggregatingComposablePartCatalog.Changed">
            <summary>
            Notify when the contents of the Catalog has changed.
            </summary>
        </member>
        <member name="E:System.ComponentModel.Composition.AggregatingComposablePartCatalog.Changing">
            <summary>
            Notify when the contents of the Catalog is about to change.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingExportProvider.#ctor(System.ComponentModel.Composition.ExportProvider[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AggregatingExportProvider"/> class.
            </summary>
            <param name="providers">The prioritized list of export providers.</param>
            <remarks>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.AggregatingExportProvider"/> will consult the providers in the order they have been specfied when 
                    executing <see cref="M:System.ComponentModel.Composition.ExportProvider.GetExports(System.ComponentModel.Composition.ImportDefinition)"/>. 
                </para>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.AggregatingExportProvider"/> does not take ownership of the specified providers. 
                    That is, it will not try to dispose of any of them when it gets disposed.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.ExportProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AggregatingExportProvider"/> class.
            </summary>
            <param name="providers">The prioritized list of export providers. The providers are consulted in order in which they are supplied.</param>
            <remarks>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.AggregatingExportProvider"/> will consult the providers in the order they have been specfied when 
                    executing <see cref="M:System.ComponentModel.Composition.ExportProvider.GetExports(System.ComponentModel.Composition.ImportDefinition)"/>. 
                </para>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.AggregatingExportProvider"/> does not take ownership of the specified providers. 
                    That is, it will not try to dispose of any of them when it gets disposed.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingExportProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingExportProvider.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingExportProvider.OnExportsChanged(System.ComponentModel.Composition.ExportsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Composition.AggregatingExportProvider.ExportsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.AggregatingExportProvider.GetExportsCore(System.ComponentModel.Composition.ImportDefinition)">
            <summary>
            Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="importDefinition">The <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> that defines the conditions of the
            <see cref="T:System.ComponentModel.Composition.Export"/> to get.</param>
            <returns></returns>
            <result>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/> objects that match
            the conditions defined by <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>, if found; otherwise, an
            empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
            	<note type="inheritinfo">
            The implementers should not treat the cardinality-related mismatches as errors, and are not
            expected to throw exceptions in those cases.
            For instance, if the import requests exactly one export and the provider has no matching exports or more than one,
            it should return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/>.
            </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.AggregatingExportProvider.Providers">
            <summary>
            Returns the providers that the <see cref="T:System.ComponentModel.Composition.AggregatingExportProvider"/> aggregates.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="E:System.ComponentModel.Composition.AggregatingExportProvider.ExportsChanged">
            <summary>
                Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.ExportProvider"/> change.
            </summary>
            <remarks>
                The <see cref="E:System.ComponentModel.Composition.AggregatingExportProvider.ExportsChanged"/> event passes an <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/>
                which provides a list of contract names for the exports that have changed. An export
                is considered to have changed if it has been added, removed, or updated in the 
                <see cref="T:System.ComponentModel.Composition.AggregatingExportProvider"/>.
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.AllowNonPublicCompositionAttribute">
            <summary>
                Specifies that an assembly's non-public types and members can participate in composition.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.AllowNonPublicCompositionAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AllowNonPublicCompositionAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.ComposablePartDefinition">
            <summary>
                Defines the <see langword="abstract"/> base class for composable part definitions, which 
                describe, and allow the creation of, <see cref="T:System.ComponentModel.Composition.ComposablePart"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartDefinition.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartDefinition.CreatePart">
            <summary>
                Creates a new instance of a part that the definition describes.
            </summary>
            <returns>
                The created <see cref="T:System.ComponentModel.Composition.ComposablePart"/>.
            </returns>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        Derived types overriding this method should return a new instance of a 
                        <see cref="T:System.ComponentModel.Composition.ComposablePart"/> on every invoke and should never return 
                        <see langword="null"/>.
                    </note>
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ComposablePartDefinition.ExportDefinitions">
            <summary>
                Gets the export definitions that describe the exported objects provided by parts 
                created by the definition.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects describing
                the exported objects provided by <see cref="T:System.ComponentModel.Composition.ComposablePart"/> objects created by the 
                <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/>.
            </value>
            <remarks>
                <note type="inheritinfo">
                    Overrides of this property should never return <see langword="null"/>.
                    If the <see cref="T:System.ComponentModel.Composition.ComposablePart"/> objects created by the 
                    <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> do not provide exported objects, return 
                    an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> instead.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ComposablePartDefinition.ImportDefinitions">
            <summary>
                Gets the import definitions that describe the imports required by parts created 
                by the definition.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> objects describing
                the imports required by <see cref="T:System.ComponentModel.Composition.ComposablePart"/> objects created by the 
                <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/>.
            </value>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>.
                    If the <see cref="T:System.ComponentModel.Composition.ComposablePart"/> objects created by the 
                    <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> do not have imports, return an empty 
                    <see cref="T:System.Collections.Generic.IEnumerable`1"/> instead.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ComposablePartDefinition.Metadata">
            <summary>
                Gets the metadata of the definition.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/>. The default is an empty, read-only
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </value>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        Overriders of this property should return a read-only
                        <see cref="T:System.Collections.Generic.IDictionary`2"/> object with a case-sensitive, 
                        non-linguistic comparer, such as <see cref="P:System.StringComparer.Ordinal"/>, 
                        and should never return <see langword="null"/>. If the 
                        <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> does contain metadata, 
                        return an empty <see cref="T:System.Collections.Generic.IDictionary`2"/> instead.
                    </note>
                </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportDefinition">
            <summary>
                Describes the contract that an <see cref="T:System.ComponentModel.Composition.Export"/> object satisfies.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportDefinition.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override <see cref="P:System.ComponentModel.Composition.ExportDefinition.ContractName"/>
                    and optionally, <see cref="P:System.ComponentModel.Composition.ExportDefinition.Metadata"/>. By default, <see cref="P:System.ComponentModel.Composition.ExportDefinition.Metadata"/>
                    returns an empty, read-only dictionary.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportDefinition.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> class with 
                the specified contract name and metadata.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.ExportDefinition"/>.
            </param>
            <param name="metadata">
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.ExportDefinition"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.ExportDefinition.Metadata"/> property to an empty, read-only 
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportDefinition.ToString">
            <summary>
                Returns a string representation of the export definition.
            </summary>
            <returns>
                A <see cref="T:System.String"/> containing the value of the <see cref="P:System.ComponentModel.Composition.ExportDefinition.ContractName"/> property.
            </returns>
        </member>
        <member name="P:System.ComponentModel.Composition.ExportDefinition.ContractName">
            <summary>
                Gets the contract name of the export definition.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.ExportDefinition"/>.
            </value>
            <exception cref="T:System.NotImplementedException">
                The property was not overridden by a derived class.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/> 
                    or an empty string ("").
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ExportDefinition.Metadata">
            <summary>
                Gets the metadata of the export definition.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.ExportDefinition"/>. The default is an empty, read-only
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </value>
            <remarks>
                <para>
                    <note type="inheritinfo">
                        Overriders of this property should return a read-only
                        <see cref="T:System.Collections.Generic.IDictionary`2"/> object with a case-sensitive, 
                        non-linguistic comparer, such as <see cref="P:System.StringComparer.Ordinal"/>, 
                        and should never return <see langword="null"/>.
                        If the <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> does not contain metadata 
                        return an empty <see cref="T:System.Collections.Generic.IDictionary`2"/> instead.
                    </note>
                </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.ContractBasedImportDefinition">
            <summary>
                Represents a contract name and metadata-based import 
                required by a <see cref="T:System.ComponentModel.Composition.ComposablePart"/> object.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.ImportDefinition">
            <summary>
                Represents an import required by a <see cref="T:System.ComponentModel.Composition.ComposablePart"/> object.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportDefinition.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override the <see cref="P:System.ComponentModel.Composition.ImportDefinition.Constraint"/> 
                    property, and optionally, the <see cref="P:System.ComponentModel.Composition.ImportDefinition.Cardinality"/>, <see cref="P:System.ComponentModel.Composition.ImportDefinition.IsPrerequisite"/> 
                    and <see cref="P:System.ComponentModel.Composition.ImportDefinition.IsRecomposable"/> 
                    properties.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.ExportDefinition,System.Boolean}},System.ComponentModel.Composition.ImportCardinality,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> class 
                with the specified constraint, cardinality, value indicating if the import 
                definition is recomposable and a value indicating if the import definition 
                is a prerequisite.
            </summary>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions that must be matched for the <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> 
                to be satisfied by an <see cref="T:System.ComponentModel.Composition.Export"/>.
            </param>
            <param name="cardinality">
                One of the <see cref="T:System.ComponentModel.Composition.ImportCardinality"/> values indicating the 
                cardinality of the <see cref="T:System.ComponentModel.Composition.Export"/> objects required by the
                <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>.
            </param>
            <param name="isRecomposable">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> can be satisfied 
                multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.ComposablePart"/>, otherwise, 
                <see langword="false"/>.
            </param>
            <param name="isPrerequisite">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> is required to be 
                satisfied before a <see cref="T:System.ComponentModel.Composition.ComposablePart"/> can start producing exported 
                objects; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="constraint"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="cardinality"/> is not one of the <see cref="T:System.ComponentModel.Composition.ImportCardinality"/> 
                values.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportDefinition.ToString">
            <summary>
                Returns a string representation of the import definition.
            </summary>
            <returns>
                A <see cref="T:System.String"/> containing the value of the <see cref="P:System.ComponentModel.Composition.ImportDefinition.Constraint"/> property.
            </returns>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportDefinition.Cardinality">
            <summary>
                Gets the cardinality of the exports required by the import definition.
            </summary>
            <value>
                One of the <see cref="T:System.ComponentModel.Composition.ImportCardinality"/> values indicating the 
                cardinality of the <see cref="T:System.ComponentModel.Composition.Export"/> objects required by the
                <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>. The default is 
                <see cref="F:System.ComponentModel.Composition.ImportCardinality.ExactlyOne"/>
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportDefinition.Constraint">
            <summary>
                Gets an expression that defines conditions that must be matched for the import 
                described by the import definition to be satisfied.
            </summary>
            <returns>
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions that must be matched for the 
                <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> to be satisfied by an <see cref="T:System.ComponentModel.Composition.Export"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
                The property was not overridden by a derived class.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportDefinition.IsPrerequisite">
            <summary>
                Gets a value indicating whether the import definition is required to be 
                satisfied before a part can start producing exported objects.
            </summary>
            <value>
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> is required to be 
                satisfied before a <see cref="T:System.ComponentModel.Composition.ComposablePart"/> can start producing exported 
                objects; otherwise, <see langword="false"/>. The default is <see langword="true"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportDefinition.IsRecomposable">
            <summary>
                Gets a value indicating whether the import definition can be satisfied multiple times.
            </summary>
            <value>
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> can be satisfied 
                multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.ComposablePart"/>, otherwise, 
                <see langword="false"/>. The default is <see langword="false"/>.
            </value>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractBasedImportDefinition.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override the <see cref="P:System.ComponentModel.Composition.ContractBasedImportDefinition.ContractName"/> 
                    property, and optionally, the <see cref="P:System.ComponentModel.Composition.ContractBasedImportDefinition.RequiredMetadata"/>, 
                    <see cref="P:System.ComponentModel.Composition.ImportDefinition.Cardinality"/>, <see cref="P:System.ComponentModel.Composition.ImportDefinition.IsPrerequisite"/> 
                    and <see cref="P:System.ComponentModel.Composition.ImportDefinition.IsRecomposable"/> properties.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractBasedImportDefinition.#ctor(System.String,System.ComponentModel.Composition.ImportCardinality,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/> class 
                with the specified contract name, cardinality, value indicating if the import 
                definition is recomposable and a value indicating if the import definition 
                is a prerequisite.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export"/> required by the <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/>.
            </param>
            <param name="cardinality">
                One of the <see cref="T:System.ComponentModel.Composition.ImportCardinality"/> values indicating the 
                cardinality of the <see cref="T:System.ComponentModel.Composition.Export"/> objects required by the
                <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/>.
            </param>
            <param name="isRecomposable">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/> can be satisfied 
                multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.ComposablePart"/>, otherwise, 
                <see langword="false"/>.
            </param>
            <param name="isPrerequisite">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/> is required to be 
                satisfied before a <see cref="T:System.ComponentModel.Composition.ComposablePart"/> can start producing exported 
                objects; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
                <para>
                    -or-
                </para>
                <paramref name="cardinality"/> is not one of the <see cref="T:System.ComponentModel.Composition.ImportCardinality"/> 
                values.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractBasedImportDefinition.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.ComponentModel.Composition.ImportCardinality,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/> class 
                with the specified contract name, required metadataq, cardinality, value indicating 
                if the import definition is recomposable and a value indicating if the import definition 
                is a prerequisite.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export"/> required by the <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/>.
            </param>
            <param name="requiredMetadata">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> objects containing
                the metadata names of the <see cref="T:System.ComponentModel.Composition.Export"/> required by the 
                <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/>; or <see langword="null"/> to
                set the <see cref="P:System.ComponentModel.Composition.ContractBasedImportDefinition.RequiredMetadata"/> property to an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </param>
            <param name="cardinality">
                One of the <see cref="T:System.ComponentModel.Composition.ImportCardinality"/> values indicating the 
                cardinality of the <see cref="T:System.ComponentModel.Composition.Export"/> objects required by the
                <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/>.
            </param>
            <param name="isRecomposable">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/> can be satisfied 
                multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.ComposablePart"/>, otherwise, 
                <see langword="false"/>.
            </param>
            <param name="isPrerequisite">
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/> is required to be 
                satisfied before a <see cref="T:System.ComponentModel.Composition.ComposablePart"/> can start producing exported 
                objects; otherwise, <see langword="false"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
                <para>
                    -or-
                </para>
                <paramref name="requiredMetadata"/> contains an element that is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="cardinality"/> is not one of the <see cref="T:System.ComponentModel.Composition.ImportCardinality"/> 
                values.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.ContractBasedImportDefinition.ContractName">
            <summary>
                Gets the contract name of the export required by the import definition.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export"/> required by the <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/>.
            </value>
            <exception cref="T:System.NotImplementedException">
                The property was not overridden by a derived class.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>
                    or an empty string ("").
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ContractBasedImportDefinition.RequiredMetadata">
            <summary>
                Gets the metadata names of the export required by the import definition.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/> objects containing
                the metadata names of the <see cref="T:System.ComponentModel.Composition.Export"/> required by the 
                <see cref="T:System.ComponentModel.Composition.ContractBasedImportDefinition"/>. The default is an empty 
                <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </value>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return <see langword="null"/>
                    or return an <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains an element that is
                    <see langword="null"/>. If the definition does not contain required metadata, 
                    return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> instead.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ContractBasedImportDefinition.Constraint">
            <summary>
                Gets an expression that defines conditions that must be matched for the import 
                described by the import definition to be satisfied.
            </summary>
            <returns>
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions that must be matched for the 
                <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> to be satisfied by an <see cref="T:System.ComponentModel.Composition.Export"/>.
            </returns>
            <remarks>
                <para>
                    This property returns an expression that defines conditions based on the 
                    <see cref="P:System.ComponentModel.Composition.ContractBasedImportDefinition.ContractName"/> and <see cref="P:System.ComponentModel.Composition.ContractBasedImportDefinition.RequiredMetadata"/> properties.
                </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.Caching.AttributedModel.AttributedComposablePartCatalogSite">
            <summary>
            This cached catalog site is used by all catalogs that containe AttributedComposablePartDefinitions
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache.GetCacheCatalog(System.ComponentModel.Composition.Caching.ICachedComposablePartCatalogSite)">
            <summary>
            Returns the catalog that represents the cache. Note, that this is not the originally cached catalog, bur rather a representation
            of the cached part definitions.
            </summary>
            <param name="catalogSite"></param>
            <returns></returns>
        </member>
        <member name="P:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache.Metadata">
            <summary>
            Catalog metadata
            </summary>
        </member>
        <member name="P:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache.Reader">
            <summary>
            The reader that has provided the cache
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.ReadCacheCore(System.Object)">
            <summary>
            Reads the catalog cache given the cache token.
            </summary>
            <param name="cacheToken">The cache token.</param>
            <returns>The catalog cache corresponding to the specified cache token.</returns>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.ReadCatalog(System.Object)">
            <summary>
            Reads the catalog from the cache given the specified cache token. This methos trows if thew catalog with the given
            token doesn't exist.
            </summary>
            <param name="cacheToken">The cache token.</param>
            <returns>The catalog corresponding to the specified cache token.</returns>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.ReadRootCatalog">
            <summary>
            Reads the root catalog from the cache
            </summary>
            <returns>The root catalog.</returns>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.Dispose">
            <summary>
            Releases all the resources allocated by the <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader"/> and completes the cache writing.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.Dispose(System.Boolean)">
            <summary>
            Releases all the resources allocated by the <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> and completes the cache writing.
            </summary>
            <param name="disposing">Is called from Dispose() if set to <c>true</c>, otherwise is called from the finalizer.</param>
        </member>
        <member name="P:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheReader.RootCacheToken">
            <summary>
            Returns the cache token corresponding to the root catalog in the cache.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter.WriteCache(System.Type,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.ComposablePartDefinition},System.Collections.Generic.IDictionary{System.String,System.Object},System.ComponentModel.Composition.Caching.ICachedComposablePartCatalogSite)">
            <summary>
            Writes part definitions and catalog metadata into the cache.
            </summary>
            <param name="catalogType">Catalog type.</param>
            <param name="partDefinitions">Parts definitions.</param>
            <param name="catalogMetadata">Catalog Metadata.</param>
            <param name="catalogSite">Catalog Site</param>
            <returns>Catalog cache token. This value can be cached and used to locate this cache wen reading from the cache.</returns>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter.WriteCacheCore(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.ComposablePartDefinition},System.Collections.Generic.IDictionary{System.String,System.Object},System.ComponentModel.Composition.Caching.ICachedComposablePartCatalogSite)">
            <summary>
            Writes part definitions and catalog metadata into the cache.
            </summary>
            <param name="partDefinitions">Parts definitions.</param>
            <param name="catalogMetadata">Catalog Metadata.</param>
            <param name="catalogSite">Catalog Site</param>
            <returns>Catalog cache token. This value can be cached and used to locate this cache wen reading from the cache.</returns>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter.WriteRootCacheToken(System.Object)">
            <summary>
            Sets "root" catalog of the cache - that is one that the corresponding <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache"/> will open first when the 
            appropriate storage is read. This method may be called multiple times; the last set value is expected to be written to the cache when the
            <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> is disposed.
            </summary>
            <param name="catalogToken">Value returned by a call to WriteCache.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter.Dispose">
            <summary>
            Releases all the resources allocated by the <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> and completes the cache writing.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter.Dispose(System.Boolean)">
            <summary>
            Releases all the resources allocated by the <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> and completes the cache writing.
            </summary>
            <param name="disposing">Is called from Dispose() if set to <c>true</c>, otherwise is called from the finalizer.</param>
        </member>
        <member name="T:System.ComponentModel.Composition.Caching.EmptyCachedComposablePartCatalogSite">
            <summary>
            This is used by catalogs that don't actually have any parts, but only metadata.
            We use this type when "null" is passed for the site.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog">
            <summary>
                An immutable ComposablePartCatalog created from a managed code assembly.
            </summary>
            <remarks>
                This type is thread safe.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.AttributedAssemblyPartCatalog.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog"/> class 
                with the specified code base.
            </summary>
            <param name="codeBase">
                A <see cref="T:System.String"/> containing the code base of the assembly containing the
                attributed <see cref="T:System.Type"/> objects to add to the <see cref="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="codeBase"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="codeBase"/> is a zero-length string, contains only white space, 
                or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"/>.
            </exception>
            <exception cref="T:System.IO.PathTooLongException">
                The specified path, file name, or both exceed the system-defined maximum length. 
            </exception>
            <exception cref="T:System.Security.SecurityException">
                The caller does not have path discovery permission. 
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
                <paramref name="codeBase"/> is not found.
            </exception>
            <exception cref="T:System.IO.FileLoadException">
                <paramref name="codeBase"/> could not be loaded.
                <para>
                    -or-
                </para>
                <paramref name="codeBase"/> specified a directory.
            </exception>
            <exception cref="T:System.BadImageFormatException">
                <paramref name="codeBase"/> is not a valid assembly
                -or- 
                Version 2.0 or later of the common language runtime is currently loaded 
                and <paramref name="codeBase"/> was compiled with a later version. 
            </exception>
            <remarks>
                The assembly referenced by <paramref langword="codeBase"/> is loaded into the Load context.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.AttributedAssemblyPartCatalog.#ctor(System.Reflection.Assembly)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog"/> class 
                with the specified assembly.
            </summary>
            <param name="assembly">
                The <see cref="T:System.Reflection.Assembly"/> containing the attributed <see cref="T:System.Type"/> objects to 
                add to the <see cref="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog"/>.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="assembly"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>    
                <paramref name="assembly"/> was loaded in the reflection-only context.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.AttributedAssemblyPartCatalog.#ctor(System.ComponentModel.Composition.Caching.ComposablePartCatalogCache)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog"/> class 
                with the specified cache.
            </summary>
            <param name="cache">
                The <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache"/> to read the catalog from.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="cache"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.AttributedAssemblyPartCatalog.CacheCatalog(System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter)">
            <summary>
               Caches the catalog using the specified cache writer
            </summary>
            <param name="writer">
               The <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> to use to cache the 
               <see cref="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog"/>.
            </param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.AttributedAssemblyPartCatalog.GetExports(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the export definitions that match the conditions defined by the specified constraint.
            </summary>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects to return.
            </param>
            <returns>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.Tuple`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects and their associated 
                <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects that matche the conditions defined 
                by <paramref name="constraint"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="constraint"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.AttributedAssemblyPartCatalog.IsCacheUpToDate">
            <summary>
                Gets a value indicating whether the underlying cache is up-to-date.
            </summary>
            <value>
                <see langword="true"/> if the underlying <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache"/> 
                is up-to-date; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.AttributedAssemblyPartCatalog.Parts">
            <summary>
                Gets the part definitions of the catalog.
            </summary>
            <value>
                A <see cref="T:System.Linq.IQueryable`1"/> of <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects of the 
                <see cref="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AttributedAssemblyPartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="T:System.ComponentModel.Composition.AttributedTypesPartCatalog">
            <summary>
                An immutable ComposablePartCatalog created from a type array or a list of managed types.  This class is threadsafe.
                It is Disposable.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.AttributedTypesPartCatalog.#ctor(System.Type[])">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/> class 
                with the specified types.
            </summary>
            <param name="types">
                An <see cref="T:System.Array"/> of attributed <see cref="T:System.Type"/> objects to add to the 
                <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="types"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="types"/> contains an element that is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="types"/> contains an element that was loaded in the Reflection-only context.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.AttributedTypesPartCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/> class
                with the specified types.
            </summary>
            <param name="types">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of attributed <see cref="T:System.Type"/> objects to add 
                to the <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="types"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="types"/> contains an element that is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="types"/> contains an element that was loaded in the reflection-only context.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.AttributedTypesPartCatalog.#ctor(System.ComponentModel.Composition.Caching.ComposablePartCatalogCache)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/> class 
                with the specified cache.
            </summary>
            <param name="cache">
                <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache"/> to read the <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/> from.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="cache"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.AttributedTypesPartCatalog.CacheCatalog(System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter)">
            <summary>
               Caches the catalog using the specified cache writer
            </summary>
            <param name="writer">
               The <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> to use to cache the 
               <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/>.
            </param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.AttributedTypesPartCatalog.GetExports(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.ExportDefinition,System.Boolean}})">
            <summary>
                Returns the export definitions that match the conditions defined by the specified constraint.
            </summary>
            <param name="constraint">
                A <see cref="T:System.Linq.Expressions.Expression`1"/> containing a <see cref="T:System.Func`2"/> 
                that defines the conditions of the <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects to return.
            </param>
            <returns>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.Tuple`2"/> containing the 
                <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> objects and their associated 
                <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects that matche the conditions defined 
                by <paramref name="constraint"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="constraint"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.AttributedTypesPartCatalog.IsCacheUpToDate">
            <summary>
                Gets a value indicating whether the underlying cache is up-to-date.
            </summary>
            <value>
                <see langword="true"/> if the underlying <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCache"/> 
                is up-to-date; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.AttributedTypesPartCatalog.Parts">
            <summary>
                Gets the part definitions of the catalog.
            </summary>
            <value>
                A <see cref="T:System.Linq.IQueryable`1"/> of <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects of the 
                <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.AttributedTypesPartCatalog"/> has been disposed of.
            </exception>
        </member>
        <member name="T:System.ComponentModel.Composition.ComposablePartCatalogCollection">
            <summary>
                This class implements a threadsafe ICollection{T} of ComposablePartCatalog.
                It is exposed as an ICollection(ComposablePartCatalog)
                It is threadsafe, notifications are not marshalled using a SynchronizationContext.
                It is Disposable.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartCatalogExportProvider.#ctor(System.ComponentModel.Composition.ComposablePartCatalog)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ComposablePartCatalogExportProvider"/> class.
            </summary>
            <param name="catalog">The catalog.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartCatalogExportProvider.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartCatalogExportProvider.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartCatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.ImportDefinition)">
            <summary>
            Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="importDefinition">The <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> that defines the conditions of the
            <see cref="T:System.ComponentModel.Composition.Export"/> to get.</param>
            <returns></returns>
            <result>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/> objects that match
            the conditions defined by <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>, if found; otherwise, an
            empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
            	<note type="inheritinfo">
            The implementers should not treat the cardinality-related mismatches as errors, and are not
            expected to throw exceptions in those cases.
            For instance, if the import requests exactly one export and the provider has no matching exports or more than one,
            it should return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/>.
            </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartCatalogExportProvider.OnExportsChanged(System.ComponentModel.Composition.ExportsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Composition.AggregatingExportProvider.ExportsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:System.ComponentModel.Composition.ComposablePartCatalogExportProvider.SourceProvider">
            <summary>
            Gets or sets the source provider.
            </summary>
            <value>The source provider.</value>
        </member>
        <member name="E:System.ComponentModel.Composition.ComposablePartCatalogExportProvider.ExportsChanged">
            <summary>
                Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.ExportProvider"/> change.
            </summary>
            <remarks>
                The <see cref="E:System.ComponentModel.Composition.ComposablePartCatalogExportProvider.ExportsChanged"/> event passes an <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/>
                which provides a list of contract names for the exports that have changed. An export
                is considered to have changed if it has been added, removed, or updated in the 
                <see cref="T:System.ComponentModel.Composition.ComposablePartCatalogExportProvider"/>.
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.CardinalityMismatchException">
            <summary>
                The exception that is thrown when the cardinality of a <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>
                does not match the cardinality of the <see cref="T:System.ComponentModel.Composition.Export"/> objects available in an 
                <see cref="T:System.ComponentModel.Composition.ExportProvider"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CardinalityMismatchException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CardinalityMismatchException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/> class 
                with the specified error message.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CardinalityMismatchException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/> class 
                with the specified error message and exception that is the cause of the  
                exception.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
            <param name="innerException">
                The <see cref="T:System.Exception"/> that is the underlying cause of the 
                <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.InnerException"/> property to <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CardinalityMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/> class 
                with the specified serialization data.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.CardinalityMismatchException"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:System.ComponentModel.Composition.ComposablePartCatalogChangedEventArgs">
            <summary>
                Provides data for the <see cref="E:System.ComponentModel.Composition.INotifyComposablePartCatalogChanged.Changed"/> event.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ComposablePartCatalogChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.ComposablePartDefinition})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ComposablePartCatalogChangedEventArgs"/> 
                class with the specified changed <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects.
            </summary>
            <param name="changedPartsIdentifiers">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects that 
                have changed in the <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="changedParts"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.ComposablePartCatalogChangedEventArgs.ChangedParts">
            <summary>
                Gets the identifiers of the parts that have changed.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.ComposablePartDefinition"/> objects that 
                have changed in the <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/>.
            </value>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionEngine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionEngine"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionEngine.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionEngine.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionEngine.SatisfyImportsAndRegisterForRecomposition(System.ComponentModel.Composition.ComposablePart)">
            <summary>
            Satisfies the imports and registers the part for recomposition.
            </summary>
            <param name="part">The part.</param>
            <returns></returns>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionEngine.UnregisterForRecomposition(System.ComponentModel.Composition.ComposablePart)">
            <summary>
            Unregisters the part for recomposition.
            </summary>
            <param name="part">The part.</param>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionEngine.SourceProvider">
            <summary>
            Gets or sets the source provider.
            </summary>
            <value>The source provider.</value>
        </member>
        <member name="T:System.ComponentModel.Composition.CompositionServiceExtensions">
            <summary>
                Provides extension methods for the <see cref="T:System.ComponentModel.Composition.ICompositionService"/> interface.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionServiceExtensions.AddExportedObject``1(System.ComponentModel.Composition.ICompositionService,``0)">
            <summary>
                Adds the specified object to the composition service, exporting it under a contract 
                name derived from the specified type parameter.
            </summary>
            <typeparam name="T">
                The type of the object to add. The contract name is also derived from this type 
                parameter.
            </typeparam>
            <param name="compositionService">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> to add the <see cref="T:System.Object"/> to.
            </param>
            <param name="exportedObject">
                The <see cref="T:System.Object"/> to add to the <see cref="T:System.ComponentModel.Composition.ICompositionService"/>. This can
                be <see langword="null"/>.
            </param>
            <returns>
                A <see cref="T:System.ComponentModel.Composition.ComposablePart"/> that can be used remove the <see cref="T:System.Object"/>
                from the <see cref="T:System.ComponentModel.Composition.ICompositionService"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="compositionService"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on <typeparamref name="T"/>.
                </para>
                <para>
                    The <see cref="T:System.Object"/> is not available until 
                    <see cref="M:System.ComponentModel.Composition.ICompositionService.Compose"/> is called.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionServiceExtensions.AddExportedObject(System.ComponentModel.Composition.ICompositionService,System.String,System.Object)">
            <summary>
                Adds the specified object to the composition service, exporting it under the specified 
                contract name.
            </summary>
            <param name="compositionService">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> to add the <see cref="T:System.Object"/> to.
            </param>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name to export the <see cref="T:System.Object"/> 
                under.
            </param>
            <param name="exportedObject">
                The <see cref="T:System.Object"/> to add to the <see cref="T:System.ComponentModel.Composition.ICompositionService"/>. This can
                be <see langword="null"/>.
            </param>
            <returns>
                A <see cref="T:System.ComponentModel.Composition.ComposablePart"/> that can be used remove the <see cref="T:System.Object"/>
                from the <see cref="T:System.ComponentModel.Composition.ICompositionService"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="compositionService"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="contractName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    The <see cref="T:System.Object"/> is not available until 
                    <see cref="M:System.ComponentModel.Composition.ICompositionService.Compose"/> is called.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionServiceExtensions.AddExport(System.ComponentModel.Composition.ICompositionService,System.ComponentModel.Composition.Export)">
            <summary>
                Adds the specified export to the composition service.
            </summary>
            <param name="compositionService">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> to add the <see cref="T:System.ComponentModel.Composition.Export"/> to.
            </param>
            <param name="export">
                The <see cref="T:System.ComponentModel.Composition.Export"/> to add to the <see cref="T:System.ComponentModel.Composition.ICompositionService"/>.
            </param>
            <returns>
                A <see cref="T:System.ComponentModel.Composition.ComposablePart"/> that can be used remove the <see cref="T:System.ComponentModel.Composition.Export"/>
                from the <see cref="T:System.ComponentModel.Composition.ICompositionService"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="compositionService"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="export"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.Export"/> is not available until 
                    <see cref="M:System.ComponentModel.Composition.ICompositionService.Compose"/> is called.
                </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.ContractMismatchException">
            <summary>
                The exception that is thrown when the underlying exported object or metadata of an 
                <see cref="T:System.ComponentModel.Composition.Export`1"/> or <see cref="T:System.ComponentModel.Composition.Export`2"/> object cannot be 
                cast to <c>T</c> or <c>TMetadataView</c>, respectively.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractMismatchException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractMismatchException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/> class 
                with the specified error message.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractMismatchException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/> class 
                with the specified error message and exception that is the cause of the  
                exception.
            </summary>
            <param name="message">
                A <see cref="T:System.String"/> containing a message that describes the 
                <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.Message"/> property to its default value.
            </param>
            <param name="innerException">
                The <see cref="T:System.Exception"/> that is the underlying cause of the 
                <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/>; or <see langword="null"/> to set
                the <see cref="P:System.Exception.InnerException"/> property to <see langword="null"/>.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/> class 
                with the specified serialization data.
            </summary>
            <param name="info">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the 
                <see cref="T:System.ComponentModel.Composition.ContractMismatchException"/>.
            </param>
            <param name="context">
                The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the 
                source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:System.ComponentModel.Composition.DiscoveryMode">
            <summary>
                Specifies when an attributed part is discovered by a <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.DiscoveryMode.Auto">
            <summary>
                Indicates that an attributed part will be discovered by a 
                <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/> if a member declared at the level of the type's 
                hierarchy, or if the type itself, is marked with the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/>,
                <see cref="T:System.ComponentModel.Composition.ImportingConstructorAttribute"/>, or <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> 
                attributes. Inherited members are not considered.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.DiscoveryMode.Never">
            <summary>
                Indicates that an attributed part will never be discovered by a 
                <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.DiscoveryMode.Always">
            <summary>
                Indicates that an attributed part will be discovered by a 
                <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/> if a member declared anywhere in the type's
                hierarchy, or if the type itself, is marked with the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/>,
                <see cref="T:System.ComponentModel.Composition.ImportingConstructorAttribute"/>, or <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> 
                attributes.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportCollection`2">
            <summary>
                Represents a collection of <see cref="T:System.ComponentModel.Composition.Export`2"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> class 
                that is empty.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection`2.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Export{`0,`1}})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> class, 
                adding the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export`2"/> 
                objects to the collection.
            </summary>
            <param name="items">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export`2"/> objects to add 
                to the <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/>; or <see langword="null"/> to create 
                an <see cref="T:System.ComponentModel.Composition.ExportCollection`2"/> that is empty.
            </param>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportCollection`1">
            <summary>
                Represents a collection of <see cref="T:System.ComponentModel.Composition.Export`1"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> class 
                that is empty.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection`1.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Export{`0}})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> class,
                adding the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export`1"/> 
                objects to the collection.
            </summary>
            <param name="items">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export`1"/> objects to add 
                to the <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/>; or <see langword="null"/> to create an 
                <see cref="T:System.ComponentModel.Composition.ExportCollection`1"/> that is empty.
            </param>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportsChangedEventArgs">
            <summary>
                Provides data for the <see cref="E:System.ComponentModel.Composition.CompositionContainer.ExportsChanged"/> event.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportsChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/> class with 
                the specified changed contract names.
            </summary>
            <param name="changedContractNames">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of strings representing the contract names of the 
                exports that have changed in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="changedContractNames"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.ExportsChangedEventArgs.ChangedContractNames">
            <summary>
                Gets the contract names of the exports that have changed.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of strings representing the contract names of 
                the exports that have changed in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.Export`2">
            <summary>
                Represents an export. That is, a type that is made up of a delay-created exported object, 
                metadata that describes that object and a strongly-typed view over that metadata.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.Export`1">
            <summary>
                Represents an export. That is, a type that is made up of a delay-created exported object
                and metadata that describes that object.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.Export">
            <summary>
                Represents an export. That is, a type that is made up of a delay-created exported object 
                and metadata that describes that object.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.Export.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override <see cref="P:System.ComponentModel.Composition.Export.Definition"/>
                    and <see cref="M:System.ComponentModel.Composition.Export.GetExportedObjectCore"/>.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Export.#ctor(System.String,System.Func{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export"/> class 
                with the specified contract name and exported object getter.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Export.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Func{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export"/> class 
                with the specified contract name, metadata and exported object getter.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export"/>.
            </param>
            <param name="metadata">
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Export"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.Export.Metadata"/> property to an empty, read-only 
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Export.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export.#ctor(System.ComponentModel.Composition.ExportDefinition,System.Func{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export"/> class 
                with the specified export definition and exported object getter.
            </summary>
            <param name="definition">
                An <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> that describes the contract that the 
                <see cref="T:System.ComponentModel.Composition.Export"/> satisfies.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export"/>. This allows the creation of the object to be delayed 
                until  <see cref="M:System.ComponentModel.Composition.Export.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export.GetExportedObject">
            <summary>
                Returns the exported object of the export.
            </summary>
            <returns>
                The exported <see cref="T:System.Object"/> of the <see cref="T:System.ComponentModel.Composition.Export"/>.
            </returns>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will 
                contain a list of errors that occurred.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The current instance is an instance of <see cref="T:System.ComponentModel.Composition.Export`1"/> and the underlying 
                exported object cannot be cast to <c>T</c>.
            </exception>
            <exception cref="T:System.NotImplementedException">
                The <see cref="M:System.ComponentModel.Composition.Export.GetExportedObjectCore"/> method was not overridden by a derived class.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export.GetExportedObjectCore">
            <summary>
                Returns the exported object of the export.
            </summary>
            <returns>
                The exported <see cref="T:System.Object"/> of the <see cref="T:System.ComponentModel.Composition.Export"/>.
            </returns>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will 
                contain a list of errors that occurred.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The current instance is an instance of <see cref="T:System.ComponentModel.Composition.Export`1"/> and the underlying 
                exported object cannot be cast to <c>T</c>.
            </exception>
            <exception cref="T:System.NotImplementedException">
                The method was not overridden by a derived class.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this method should never return
                    <see langword="null"/>.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Export.Definition">
            <summary>
                Gets the definition that describes the contract that the export satisfies.
            </summary>
            <value>
                An <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> that describes the contract that 
                the <see cref="T:System.ComponentModel.Composition.Export"/> satisfies.
            </value>
            <exception cref="T:System.NotImplementedException">
                This property was not overridden by a derived class.
            </exception>
            <remarks>
                <note type="inheritinfo">
                    Overriders of this property should never return
                    <see langword="null"/>.
                </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.Export.Metadata">
            <summary>
                Gets the metadata of the export.
            </summary>
            <value>
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Export"/>.
            </value>
            <exception cref="T:System.NotImplementedException">
                The <see cref="P:System.ComponentModel.Composition.Export.Definition"/> property was not overridden by a derived class.
            </exception>
            <remarks>
                <para>
                    This property returns the value of <see cref="P:System.ComponentModel.Composition.ExportDefinition.Metadata"/>
                    of the <see cref="P:System.ComponentModel.Composition.Export.Definition"/> property.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override <see cref="P:System.ComponentModel.Composition.Export.Definition"/>
                    and <see cref="M:System.ComponentModel.Composition.Export.GetExportedObjectCore"/>.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.#ctor(System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class 
                with the specified exported object getter.
            </summary>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>. This allows the creation of the object to be delayed 
                until  <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <remarks>
                <para>
                    The <see cref="P:System.ComponentModel.Composition.ExportDefinition.ContractName"/> property of <see cref="P:System.ComponentModel.Composition.Export.Definition"/> 
                    is the result of calling <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on 
                    <typeparamref name="T"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.#ctor(System.String,System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class 
                with the specified contract name and exported object getter.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class 
                with the specified contract name, metadata and exported object getter.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>.
            </param>
            <param name="metadata">
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.Export.Metadata"/> property to an empty, read-only 
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>. This allows the creation of the object to be delayed 
                until  <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.#ctor(System.ComponentModel.Composition.ExportDefinition,System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`1"/> class 
                with the specified export definition and exported object getter.
            </summary>
            <param name="definition">
                An <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> that describes the contract that the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/> satisfies.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>. This allows the creation of the object to be delayed 
                until  <see cref="M:System.ComponentModel.Composition.Export`1.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`1.GetExportedObject">
            <summary>
                Returns the exported object of the export.
            </summary>
            <returns>
                A <typeparamref name="T"/> representing the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`1"/>.
            </returns>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will contain a list of errors that occurred.
            </exception>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The underlying exported object cannot be cast to <typeparamref name="T"/>.
            </exception>
            <exception cref="T:System.NotImplementedException">
                The <see cref="M:System.ComponentModel.Composition.Export.GetExportedObjectCore"/> method was not overridden by a derived class.
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`2"/> class.
            </summary>
            <remarks>
                <note type="inheritinfo">
                    Derived types calling this constructor must override <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> 
                    and <see cref="M:System.ComponentModel.Composition.Export.GetExportedObjectCore"/>.
                </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`2.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`2"/> class 
                with the specified contract name, metadata and exported object getter.
            </summary>
            <param name="contractName">
                A <see cref="T:System.String"/> containing the contract name of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/>.
            </param>
            <param name="metadata">
                An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the metadata of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/>; or <see langword="null"/> to set the 
                <see cref="P:System.ComponentModel.Composition.Export.Metadata"/> property to an empty, read-only 
                <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Export.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="contractName"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="contractName"/> is an empty string ("").
            </exception>
        </member>
        <member name="M:System.ComponentModel.Composition.Export`2.#ctor(System.ComponentModel.Composition.ExportDefinition,System.Func{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Export`2"/> class 
                with the specified export definition and exported object getter.
            </summary>
            <param name="definition">
                An <see cref="T:System.ComponentModel.Composition.ExportDefinition"/> that describes the contract that the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/> satisfies.
            </param>
            <param name="exportedObjectGetter">
                A <see cref="T:System.Func`1"/> that is called to create the exported object of the 
                <see cref="T:System.ComponentModel.Composition.Export`2"/>. This allows the creation of the object to be delayed 
                until <see cref="M:System.ComponentModel.Composition.Export.GetExportedObject"/> is called.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="definition"/> is <see langword="null"/>.
                <para>
                    -or-
                </para>
                <paramref name="exportedObjectGetter"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:System.ComponentModel.Composition.Export`2.MetadataView">
            <summary>
                Gets the metadata view for the export.
            </summary>
            <value>
                A <typeparamref name="TMetadataView"/> representing the strongly-typed metadata view 
                for the <see cref="T:System.ComponentModel.Composition.Export`2"/>.
            </value>
            <exception cref="T:System.ComponentModel.Composition.ContractMismatchException">
                The <see cref="P:System.ComponentModel.Composition.Export.Metadata"/> property cannot be converted to <typeparamref name="TMetadataView"/>.
            </exception>
            <exception cref="T:System.NotImplementedException">
                The <see cref="P:System.ComponentModel.Composition.Export.Definition"/> property was not overridden by a derived class.
            </exception>
            <remarks>
                <para>
                    This property represents a strong-typed view over the <see cref="P:System.ComponentModel.Composition.Export.Metadata"/> property.
                </para>
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.ImportCardinality">
            <summary>
                Indicates the cardinality of the <see cref="T:System.ComponentModel.Composition.Export"/> objects required by an <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.ImportCardinality.ZeroOrOne">
            <summary>
                Zero or one <see cref="T:System.ComponentModel.Composition.Export"/> objects are required by an <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.ImportCardinality.ExactlyOne">
            <summary>
                Exactly one <see cref="T:System.ComponentModel.Composition.Export"/> object is required by an <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>.
            </summary>
        </member>
        <member name="F:System.ComponentModel.Composition.ImportCardinality.ZeroOrMore">
            <summary>
                Zero or more <see cref="T:System.ComponentModel.Composition.Export"/> objects are required by an <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.ImportingConstructorAttribute">
            <summary>
                Specifies that a constructor should be used when constructing an attributed part.
            </summary>
            <remarks>
                By default, only a default parameter-less constructor, if available, is used to 
                construct an attributed part. Use this attribute to indicate that a specific constructor 
                should be used.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportingConstructorAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportingConstructorAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.MutableExportProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.MutableExportProvider"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.MutableExportProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.MutableExportProvider.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.MutableExportProvider.GetExportsCore(System.ComponentModel.Composition.ImportDefinition)">
            <summary>
            Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="importDefinition">The <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> that defines the conditions of the
            <see cref="T:System.ComponentModel.Composition.Export"/> to get.</param>
            <returns></returns>
            <result>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/> objects that match
            the conditions defined by <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>, if found; otherwise, an
            empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
            	<note type="inheritinfo">
            The implementers should not treat the cardinality-related mismatches as errors, and are not
            expected to throw exceptions in those cases.
            For instance, if the import requests exactly one export and the provider has no matching exports or more than one,
            it should return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/>.
            </note>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.MutableExportProvider.OnExportsChanged(System.ComponentModel.Composition.ExportsChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ExportsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:System.ComponentModel.Composition.MutableExportProvider.SourceProvider">
            <summary>
            Gets or sets the source provider.
            </summary>
            <value>The source provider.</value>
        </member>
        <member name="E:System.ComponentModel.Composition.MutableExportProvider.ExportsChanged">
            <summary>
            Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.ExportProvider"/> change.
            </summary>
            <remarks>
            The <see cref="E:System.ComponentModel.Composition.MutableExportProvider.ExportsChanged"/> event passes an <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/>
            which provides a list of contract names for the exports that have changed. An export
            is considered to have changed if it has been added, removed, or updated in the
            <see cref="T:System.ComponentModel.Composition.ExportProvider"/>.
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportCollection">
            <summary>
                Represents a collection of <see cref="T:System.ComponentModel.Composition.Export"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection"/> class 
                that is empty.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportCollection.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Export})">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportCollection"/> class,
                adding the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/>
                objects to the collection.
            </summary>
            <param name="items">
                An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/> objects to add 
                to the <see cref="T:System.ComponentModel.Composition.ExportCollection"/>; or <see langword="null"/> to create 
                an <see cref="T:System.ComponentModel.Composition.ExportCollection"/> that is empty.
            </param>
        </member>
        <member name="T:System.ComponentModel.Composition.ImportRequiredMetadataAttribute">
            <summary>
                Specifies required metadata for a property, field or parameter marked with the
                <see cref="T:System.ComponentModel.Composition.ImportAttribute"/>.
            </summary>
            <remarks>
                By default, any export that matches the contract name of an import will be considered a
                match for that import. Use this attribute to indicate that an export should also contain 
                specific metadata to be considered a match.
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportRequiredMetadataAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportRequiredMetadataAttribute"/> class
                with the specified required metadata name.
            </summary>
            <param name="name">
                A <see cref="T:System.String"/> containing the name of the required metadata value, or 
                <see langword="null"/> to use an empty string ("").
            </param>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportRequiredMetadataAttribute.Name">
            <summary>
                Gets the name of the required metadata value.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing the name of the required metadata value.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.ICompositionService">
            <summary>
                Provides methods for composing <see cref="T:System.ComponentModel.Composition.ComposablePart"/> objects.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ICompositionService.AddPart(System.ComponentModel.Composition.ComposablePart)">
            <summary>
                Adds the specified composable part to the composition service.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> to add to the <see cref="T:System.ComponentModel.Composition.ICompositionService"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    If <paramref name="part"/> is already in the <see cref="T:System.ComponentModel.Composition.ICompositionService"/> 
                    then this method does nothing.
                </para>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> is not composed, nor are its exports available 
                    until <see cref="M:System.ComponentModel.Composition.ICompositionService.Compose"/> is called.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ICompositionService.Compose">
            <summary>
                Composes the composition service.
            </summary>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will
                contain a list of errors that occurred.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                <see cref="M:System.ComponentModel.Composition.ICompositionService.Compose"/> was called again before composition had finished.
            </exception>
            <remarks>
                <para>
                    You can use the <see cref="P:System.ComponentModel.Composition.ICompositionService.IsComposing"/> property to determine if the
                    <see cref="T:System.ComponentModel.Composition.ICompositionService"/> is in the process of composing.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ICompositionService.RemovePart(System.ComponentModel.Composition.ComposablePart)">
            <summary>
                Removes the specified composable part from the composition service.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> to remove from the 
                <see cref="T:System.ComponentModel.Composition.ICompositionService"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.ICompositionService"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    If <paramref name="part"/> is not in the <see cref="T:System.ComponentModel.Composition.ICompositionService"/> then
                    this method does nothing.
                </para>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> is not removed from the 
                    <see cref="T:System.ComponentModel.Composition.ICompositionService"/> and its exports are still available until 
                    <see cref="M:System.ComponentModel.Composition.ICompositionService.Compose"/> is called.
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ICompositionService.IsCompositionPending">
            <summary>
                Gets a value indicating whether the composition service has a composition pending.
            </summary>
            <value>
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.ICompositionService"/> currently has
                exported objects and <see cref="T:System.ComponentModel.Composition.ComposablePart"/> objects that have not yet been
                composed by a call to <see cref="M:System.ComponentModel.Composition.ICompositionService.Compose"/>; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.ICompositionService.IsComposing">
            <summary>
                Gets a value indicating whether the container is currently composing.
            </summary>
            <value>
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> is currently 
                composing due to a call to <see cref="M:System.ComponentModel.Composition.ICompositionService.Compose"/>, otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.#ctor(System.ComponentModel.Composition.ExportProvider[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> class.
            </summary>
            <param name="providers">The providers.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.#ctor(System.ComponentModel.Composition.ComposablePartCatalog,System.ComponentModel.Composition.ExportProvider[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> class.
            </summary>
            <param name="catalog">The catalog.</param>
            <param name="providers">The providers.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.AddPart(System.Object)">
            <summary>
                Adds the specified attributed composable part to the container.
            </summary>
            <param name="attributedPart">
                An <see cref="T:System.Object"/> containing the attributed composable part to add to the 
                <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
            </param>
            <returns>
                A <see cref="T:System.ComponentModel.Composition.ComposablePart"/> that can be used remove the composable part from
                the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="attributedPart"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    This method is equivalent to passing <paramref name="attributedPart"/> to 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.CreateAttributedPart(System.Object)"/> and passing the created 
                    instance to <see cref="M:System.ComponentModel.Composition.CompositionContainer.AddPart(System.ComponentModel.Composition.ComposablePart)"/>. 
                </para>
                <para>
                    If <paramref name="attributedPart"/> is already in the 
                    <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> then this method does nothing.
                </para>
                <para>
                    The composable part is not composed, nor are its exports available until
                    <see cref="M:System.ComponentModel.Composition.CompositionContainer.Compose"/> is called.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.AddPart(System.ComponentModel.Composition.ComposablePart)">
            <summary>
                Adds the specified composable part to the container.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> to add to the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    If <paramref name="part"/> is already in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> 
                    then this method does nothing.
                </para>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> is not composed, nor are its exports available 
                    until <see cref="M:System.ComponentModel.Composition.CompositionContainer.Compose"/> is called.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.Compose">
            <summary>
                Composes the container.
            </summary>
            <exception cref="T:System.ComponentModel.Composition.CompositionException">
                An error occurred during composition. <see cref="P:System.ComponentModel.Composition.CompositionException.Issues"/> will
                contain a list of errors that occurred.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                <see cref="M:System.ComponentModel.Composition.CompositionContainer.Compose"/> was called again before composition had finished.
            </exception>
            <remarks>
                <para>
                    You can use the <see cref="P:System.ComponentModel.Composition.CompositionContainer.IsComposing"/> property to determine if the
                    <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> is in the process of composing.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.RemovePart(System.ComponentModel.Composition.ComposablePart)">
            <summary>
                Removes the specified composable part from the container.
            </summary>
            <param name="part">
                The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> to remove from the 
                <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="part"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
                The <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> has been disposed of.
            </exception>
            <remarks>
                <para>
                    If <paramref name="part"/> is not in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> then
                    this method does nothing.
                </para>
                <para>
                    The <see cref="T:System.ComponentModel.Composition.ComposablePart"/> is not removed from the 
                    <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> and its exports are still available until 
                    <see cref="M:System.ComponentModel.Composition.CompositionContainer.Compose"/> is called.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.CreatePart(System.Object)">
            <summary>
                Creates a composable part for the specified object.
            </summary>
            <param name="part">
                An <see cref="T:System.Object"/> containing the object to create a <see cref="T:System.ComponentModel.Composition.ComposablePart"/> 
                for.
            </param>
            <returns>
                The created <see cref="T:System.ComponentModel.Composition.ComposablePart"/>.
            </returns>
            <remarks>
                <para>
                    The default implementation of this method returns an instance of the
                    default attributed composable part.
                </para>
                <para>
                    This method can be overridden by a derived class. Implementers can override 
                    <see cref="M:System.ComponentModel.Composition.CompositionContainer.CreatePart(System.Object)"/> to provide a custom implementation of 
                    <see cref="T:System.ComponentModel.Composition.ComposablePart"/> for the <see cref="M:System.ComponentModel.Composition.CompositionContainer.AddPart(System.Object)"/> method.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.OnExportsChanged(System.ComponentModel.Composition.ExportsChangedEventArgs)">
            <summary>
                Raises the <see cref="E:System.ComponentModel.Composition.CompositionContainer.ExportsChanged"/> event.
            </summary>
            <param name="e">
                An <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/> containing the event data.
            </param>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.ImportDefinition)">
            <summary>
            Returns all exports that match the conditions of the specified import.
            </summary>
            <param name="importDefinition">The <see cref="T:System.ComponentModel.Composition.ImportDefinition"/> that defines the conditions of the
            <see cref="T:System.ComponentModel.Composition.Export"/> to get.</param>
            <returns></returns>
            <result>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/> objects that match
            the conditions defined by <see cref="T:System.ComponentModel.Composition.ImportDefinition"/>, if found; otherwise, an
            empty <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </result>
            <remarks>
            	<note type="inheritinfo">
            The implementers should not treat the cardinality-related mismatches as errors, and are not
            expected to throw exceptions in those cases.
            For instance, if the import requests exactly one export and the provider has no matching exports or more than one,
            it should return an empty <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.ComponentModel.Composition.Export"/>.
            </note>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionContainer.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionContainer.IsComposing">
            <summary>
                Gets a value indicating whether the container is currently composing.
            </summary>
            <value>
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> is currently 
                composing due to a call to <see cref="M:System.ComponentModel.Composition.CompositionContainer.Compose"/>, otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionContainer.IsCompositionPending">
            <summary>
                Gets a value indicating whether the container has a composition pending.
            </summary>
            <value>
                <see langword="true"/> if the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/> currently has
                exported objects and <see cref="T:System.ComponentModel.Composition.ComposablePart"/> objects that have not yet been
                composed by a call to <see cref="M:System.ComponentModel.Composition.CompositionContainer.Compose"/>; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="E:System.ComponentModel.Composition.CompositionContainer.ExportsChanged">
            <summary>
                Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.ExportProvider"/> change.
            </summary>
            <remarks>
                The <see cref="E:System.ComponentModel.Composition.CompositionContainer.ExportsChanged"/> event passes an <see cref="T:System.ComponentModel.Composition.ExportsChangedEventArgs"/>
                which provides a list of contract names for the exports that have changed. An export
                is considered to have changed if it has been added, removed, or updated in the 
                <see cref="T:System.ComponentModel.Composition.AggregatingExportProvider"/>.
            </remarks>
        </member>
        <member name="T:System.ComponentModel.Composition.CompositionOptionsAttribute">
            <summary>
                Specifies discovery and creation options for an attributed part.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionOptionsAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.CompositionOptionsAttribute"/> class.
            </summary>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionOptionsAttribute.CreationPolicy">
            <summary>
                Gets or sets a value indicating the creation policy of the attributed part.
            </summary>
            <value>
                One of the <see cref="P:System.ComponentModel.Composition.CompositionOptionsAttribute.CreationPolicy"/> values indicating the creation policy of the 
                attributed part. The default is 
                <see cref="F:System.ComponentModel.Composition.CreationPolicy.Singleton"/>.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.CompositionOptionsAttribute.DiscoveryMode">
            <summary>
                Gets or sets a value indicating when an attributed part will be discovered.
            </summary>
            <value>
                One of the <see cref="P:System.ComponentModel.Composition.CompositionOptionsAttribute.DiscoveryMode"/> values indicating when the attributed part 
                will be discovered by a <see cref="T:System.ComponentModel.Composition.ComposablePartCatalog"/>. The default is 
                <see cref="F:System.ComponentModel.Composition.DiscoveryMode.Auto"/>.
            </value>
        </member>
        <member name="M:System.ComponentModel.Composition.CompositionServices.IsAtMostOne(System.ComponentModel.Composition.ImportCardinality)">
            <summary>
                Returns a value indicating whether cardinality is 
                <see cref="F:System.ComponentModel.Composition.ImportCardinality.ZeroOrOne"/> or 
                <see cref="F:System.ComponentModel.Composition.ImportCardinality.ExactlyOne"/>.
            </summary>
        </member>
        <member name="T:System.ComponentModel.Composition.ContractTypeAttribute">
            <summary>
                Specifies that a class, interface or delegate is a contract type.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractTypeAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ContractTypeAttribute"/> class, using the 
                default contract name.
            </summary>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on the type that is 
                    marked with this attribute.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ContractTypeAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/> class with the 
                specified contract name.
            </summary>
            <param name="contractName">
                 A <see cref="T:System.String"/> containing the contract name of the type, or 
                 <see langword="null"/> or an empty string ("") to use the default contract name.
            </param>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on the type that is 
                    marked with this attribute.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ContractTypeAttribute.ContractName">
            <summary>
                Gets the contract name of the contract type.
            </summary>
            <value>
                 A <see cref="T:System.String"/> containing the contract name of the contract 
                 <see cref="T:System.Type"/>. The default value is an empty string ("").
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.ContractTypeAttribute.MetadataViewType">
            <summary>
                Gets the metadata view of the contract type.
            </summary>
            <value>
                A <see cref="T:System.Type"/> representing the metadata view of the contract 
                <see cref="T:System.Type"/>. The default value is <see langword="null"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportAttribute">
            <summary>
                Specifies that a type, property, field, or method provides a particular export.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> class, exporting the
                type or member marked with this attribute under the default contract name.
            </summary>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on the type of the 
                    property or field, or the type itself, that is marked with this attribute. 
                    Methods must specify a contract name or type using either 
                    <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)"/> or <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> class, exporting the
                type or member marked with this attribute under a contract name derived from the 
                specified type.
            </summary>
            <param name="contractType">
                A <see cref="T:System.Type"/> of which to derive the contract name to export the type or 
                member marked with this attribute, under; or <see langword="null"/> to use the 
                default contract name.
            </param>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on 
                    <paramref name="contractType"/>.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on the type of the 
                    property or field, or the type itself, that is marked with this attribute. 
                    Methods must specify a contract name or type using either 
                    <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)"/> or <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> class, exporting the
                type or member marked with this attribute under the specified contract name.
            </summary>
            <param name="contractName">
                 A <see cref="T:System.String"/> containing the contract name to export the type or member 
                 marked with this attribute, under; or <see langword="null"/> or an empty string 
                 ("") to use the default contract name.
            </param>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on the property or field 
                    type, or the type itself that this is marked with this attribute. Methods must 
                    specify a contract name or type using either <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)"/>
                    or <see cref="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)"/>.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ExportAttribute.ContractName">
            <summary>
                Gets the contract name to export the type or member under.
            </summary>
            <value>
                 A <see cref="T:System.String"/> containing the contract name to export the type or member 
                 marked with this attribute, under. The default value is an empty string ("").
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.ExportMetadataAttribute">
            <summary>
                Specifies metadata for a type, property, field, or method marked with the
                <see cref="T:System.ComponentModel.Composition.ExportAttribute"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ExportMetadataAttribute.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportMetadataAttribute"/> with the 
                specified name and metadata value.
            </summary>
            <param name="name">
                A <see cref="T:System.String"/> containing the name of the metadata value; or 
                <see langword="null"/> to set the <see cref="P:System.ComponentModel.Composition.ExportMetadataAttribute.Name"/> property to an empty 
                string ("").
            </param>
            <param name="value">
                An <see cref="T:System.Object"/> containing the metadata value. This can be 
                <see langword="null"/>.
            </param>
        </member>
        <member name="P:System.ComponentModel.Composition.ExportMetadataAttribute.Name">
            <summary>
                Gets the name of the metadata value.
            </summary>
            <value>
                A <see cref="T:System.String"/> containing the name of the metadata value.
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.ExportMetadataAttribute.Value">
            <summary>
                Gets the metadata value.
            </summary>
            <value>
                An <see cref="T:System.Object"/> containing the metadata value.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.ImportAttribute">
            <summary>
                Specifies that a property, field, or parameter imports a particular export.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/> class, importing the 
                export with the default contract name.
            </summary>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on the property, field, 
                    or parameter type that this is marked with this attribute.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/> class, importing the
                export with the contract name derived from the specified type.
            </summary>
            <param name="contractType">
                A <see cref="T:System.Type"/> of which to derive the contract name of the export to import, or 
                <see langword="null"/> to use the default contract name.
            </param>
            <remarks>
                <para>
                    The contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on 
                    <paramref name="contractType"/>.
                </para>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on the property, field, 
                    or parameter type that is marked with this attribute.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"/> class, importing the
                export with the specified contract name.
            </summary>
            <param name="contractName">
                 A <see cref="T:System.String"/> containing the contract name of the export to import, or 
                 <see langword="null"/> or an empty string ("") to use the default contract name.
            </param>
            <remarks>
                <para>
                    The default contract name is the result of calling 
                    <see cref="M:System.ComponentModel.Composition.CompositionServices.GetContractName(System.Type)"/> on the property, field, 
                    or parameter type that is marked with this attribute.
                </para>
                <para>
                    The contract name is compared using a case-sensitive, non-linguistic comparison 
                    using <see cref="P:System.StringComparer.Ordinal"/>.
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportAttribute.ContractName">
            <summary>
                Gets the contract name of the export to import.
            </summary>
            <value>
                 A <see cref="T:System.String"/> containing the contract name of the export to import. The 
                 default value is an empty string ("").
            </value>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault">
            <summary>
                Gets or sets a value indicating whether the property, field or parameter will be set 
                to its type's default value when an export with the contract name is not present in 
                the container.
            </summary>
            <value>
                <see langword="true"/> if the property, field or parameter will be set 
                its type's default value when an export with the <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName"/> is not 
                present in the <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>; otherwise, <see langword="false"/>. 
                The default value is <see langword="false"/>.
            </value>
            <remarks>
                <para>
                    The default value of a property's, field's or parameter's type is 
                    <see langword="null"/> for reference types and 0 for numeric value types. For 
                    other value types, the default value will be each field of the value type 
                    initialized to zero, if the field is a value type or <see langword="null"/> if 
                    the field is a reference type.
                </para>
            </remarks>
        </member>
        <member name="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition">
            <summary>
                Gets or sets a value indicating whether the property or field will be recomposed
                when exports that provide the same contract that this import expects, have changed
                in the container. 
            </summary>
            <value>
                <see langword="true"/> if the property or field allows for recomposition when exports
                that provide the same <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName"/> are added or removed from the 
                <see cref="T:System.ComponentModel.Composition.CompositionContainer"/>; otherwise, <see langword="false"/>. 
                The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="T:System.ComponentModel.Composition.MetadataAttributeAttribute">
            <summary>
                Specifies that an attribute can be used to provide metadata for a type, property, field,
                or method marked with the <see cref="T:System.ComponentModel.Composition.ExportAttribute"/>.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.MetadataAttributeAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.MetadataAttributeAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Composition.DirectoryPartCatalog.CacheCatalog(System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter)">
            <summary>
               Caches the catalog using the specified cache writer
            </summary>
            <param name="writer">
               The <see cref="T:System.ComponentModel.Composition.Caching.ComposablePartCatalogCacheWriter"/> to use to cache the catalog.
            </param>
            <returns></returns>
        </member>
        <member name="E:System.ComponentModel.Composition.DirectoryPartCatalog.Changed">
            <summary>
            Notify when the contents of the Catalog has changed.
            </summary>
        </member>
        <member name="E:System.ComponentModel.Composition.DirectoryPartCatalog.Changing">
            <summary>
            Notify when the contents of the Catalog is about to change.
            </summary>
        </member>
    </members>
</doc>
